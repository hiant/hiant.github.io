[{"title":"数据库与redis的数据差异比对","date":"2017-02-23T08:15:17.000Z","path":"2017/02/23/data-difference-between-redis-and-database/","text":"1. &#x80CC;&#x666F;redis &#x88AB;&#x7528;&#x505A;&#x5185;&#x5B58;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x4E00;&#x4E9B;&#x9700;&#x8981;&#x57FA;&#x7840;&#x6570;&#x636E;&#x4ECE;&#x6570;&#x636E;&#x5E93;&#x7B5B;&#x9009;&#x51FA;&#x6765;&#xFF0C;&#x62FC;&#x63A5;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#x653E;&#x5165; redis &#x7684; set &#x548C; hash &#x7ED3;&#x6784;&#x4E2D;&#x3002; &#x57FA;&#x7840;&#x6570;&#x636E;&#x6709;&#x751F;&#x6548;&#x3001;&#x5931;&#x6548;&#x65F6;&#x95F4;&#xFF0C;&#x73B0;&#x6709;&#x662F;&#x901A;&#x8FC7; quartz job &#x5B9A;&#x65F6;&#x5237;&#x5165;&#x3001;&#x5237;&#x51FA;&#x3002;&#x540E;&#x6765;&#x63A5;&#x5230;&#x6295;&#x8BC9;&#xFF0C;&#x53D1;&#x73B0;&#x6570;&#x636E;&#x5E93;&#x548C; redis &#x6570;&#x636E;&#x4E0D;&#x4E00;&#x81F4;&#x73B0;&#x8C61;&#xFF0C;&#x539F;&#x56E0;&#x672A;&#x77E5;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x505A;&#x6570;&#x636E;&#x6BD4;&#x5BF9;&#x53CA;&#x6570;&#x636E;&#x540C;&#x6B65;&#x3002; 2. &#x601D;&#x8DEF;2.1. &#x65B9;&#x6848;&#x4E00;&#x6B65;&#x9AA4;&#xFF1A; &#x7B5B;&#x9009;&#x6570;&#x636E;&#x5E93;&#x6570;&#x636E;&#x5230;&#x4E2D;&#x95F4;&#x8868;A &#x6839;&#x636E;&#x5165; redis &#x89C4;&#x5219;&#xFF0C;&#x5C06;&#x5BF9;&#x5E94; key &#x4E2D;&#x7684;&#x6570;&#x636E;&#x5BFC;&#x51FA;&#x5E76;&#x62C6;&#x5206;&#x5165;&#x4E2D;&#x95F4;&#x8868;B &#x7F16;&#x5199;SQL&#x6BD4;&#x5BF9;&#x4E2D;&#x95F4;&#x8868;A&#x3001;B &#x4F18;&#x70B9;&#xFF1A; &#x7EDF;&#x8BA1;&#x7ED3;&#x679C;&#x5E94;&#x8BE5;&#x6BD4;&#x8F83;&#x76F4;&#x89C2;&#xFF0C;&#x6570;&#x636E;&#x51C6;&#x5907;&#x597D;&#xFF0C;SQL&#x6BD4;&#x8F83;2&#x4E2A;&#x8868;&#x7684;&#x5DEE;&#x5F02;&#x8FD8;&#x662F;&#x5F88;&#x5BB9;&#x6613;&#x5199;&#x51FA;&#x6765;&#x7F3A;&#x70B9;&#xFF1A; &#x6570;&#x636E;&#x5E93;&#x6709;&#x51E0;&#x4E2A;&#x5B57;&#x6BB5;&#x6D89;&#x53CA;&#x62C6;&#x5206;&#xFF0C;&#x6BD4;&#x5982;&#x8868;&#x793A;&#x5168;&#x56FD;&#x7684;&#x503C;&#xFF0C;&#x8981;&#x62C6;&#x5206;&#x5F88;&#x591A;&#x4E2A;&#x7701;&#x4EFD;&#x503C;&#xFF0C;&#x8FD9;&#x4E2A;&#x62C6;&#x5206;&#x5DE5;&#x4F5C;&#x4EE5;&#x6211;&#x7684;SQL&#x6C34;&#x662F;&#x641E;&#x4E0D;&#x5B9A;&#x7684;&#x3002;&#x603B;&#x7ED3;&#xFF1A; &#x65B9;&#x6848;&#x6211;&#x6CA1;&#x6CD5;&#x8D5E;&#x540C;&#xFF0C;&#x6548;&#x7387;&#x4E0D;&#x597D;&#x8BF4;&#xFF0C;&#x5355;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x8868;&#x5C31;&#x8981;&#x5EFA;2&#x4E2A;&#x8F85;&#x52A9;&#x4E2D;&#x95F4;&#x8868;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x601D;&#x8DEF;&#x5C31;&#x4E0D;&#x7B26;&#x5408;&#x6211;&#x7684;&#x4E60;&#x60EF;&#xFF0C; 2.2. &#x65B9;&#x6848;&#x4E8C;&#x6B65;&#x9AA4;&#xFF1A; &#x7B5B;&#x9009;&#x6570;&#x636E;&#x5E93;&#x6570;&#x636E;&#x5BFC;&#x51FA;&#x5230;&#x6587;&#x4EF6;A &#x5199;&#x811A;&#x672C;&#x505A;&#x6570;&#x636E;&#x62C6;&#x5206; &#x6839;&#x636E;&#x5165; redis &#x89C4;&#x5219;&#xFF0C;&#x5C06;&#x5BF9;&#x5E94;&#x5BFC;&#x51FA;&#x7684;&#x6587;&#x4EF6;&#x8F6C;&#x6362;&#x6210; pipe &#x6570;&#x636E;&#x6587;&#x4EF6; &#x5C06;&#x6570;&#x636E;&#x6587;&#x4EF6;&#x5BFC;&#x5165; new_key &#x5728;&#x4E8B;&#x52A1;&#x5185;&#x6267;&#x884C; redis &#x91CD;&#x547D;&#x540D;&#xFF1A;rename key old_key &#x53CA; rename new_key key &#x5BFC;&#x51FA; redis &#x4E2D; old_key &#x7684;&#x6570;&#x636E;&#x5230;&#x6587;&#x4EF6;B sort&#x3001;uniq&#x3001;diff &#x6BD4;&#x5BF9;A&#x3001;B&#x5DEE;&#x5F02; &#x4F18;&#x70B9;&#xFF1A; &#x6570;&#x636E;&#x540C;&#x6B65;&#x8FD9;&#x5757;&#x5DE5;&#x4F5C;&#x6700;&#x8F7B;&#x677E;&#xFF0C;&#x5BFC;&#x5165;1000&#x6570;&#x636E;&#x5728;57s&#x5DE6;&#x53F3;&#xFF0C;rename&#x5343;&#x4E07;&#x7EA7;key&#x5728;0.013s&#x5DE6;&#x53F3;&#xFF1B;&#x6570;&#x636E;&#x6BD4;&#x5BF9;&#x65E0;&#x9700;&#x65B0;&#x5EFA;&#x6BD4;&#x5BF9;&#x4E2D;&#x95F4;&#x8868;&#xFF1B;&#x5BFC;&#x51FA;&#x6570;&#x636E;&#x7528;spool&#xFF0C;&#x6BD4;&#x5BF9;&#x7528;sort&#x3001;uniq&#x3001;diff&#x7B49;&#xFF0C;&#x6548;&#x7387;&#x8FD8;&#x662F;&#x86EE;&#x9AD8;&#x7684;&#x3002;&#x7F3A;&#x70B9;&#xFF1A; &#x5982;&#x679C;&#x6570;&#x636E;&#x662F;&#x540C;&#x6B65;&#x7684;&#xFF0C;&#x5C31;&#x4F1A;&#x505A;&#x5F88;&#x591A;&#x65E0;&#x7528;&#x529F;&#xFF1B;&#x53E6;&#x5916;&#x7ED3;&#x679C;&#x4E5F;&#x4E0D;&#x591F;&#x76F4;&#x89C2;&#xFF0C;&#x5DEE;&#x5F02;&#x8BB0;&#x5F55;&#x6570;&#x7B49;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x8BA1;&#x7B97;&#xFF1B;new_key, key, old_key &#x5728; redis &#x96C6;&#x7FA4;&#x5185;&#x5FC5;&#x987B;&#x88AB;&#x5206;&#x5230;&#x540C;&#x4E00;&#x4E2A;solt&#x4E0A;&#xFF0C;&#x53EF;&#x4EE5;&#x53BB;&#x67E5;&#x9605;&#x76F8;&#x5173;&#x8D44;&#x6599;&#x6DF1;&#x5165;&#x4E86;&#x89E3;&#x3002;&#x5176;&#x4ED6;&#xFF1A; &#x6211;&#x4EEC;&#x7684;keykey&#x540D;&#x5B57;&#x8BBE;&#x8BA1;&#x6700;&#x521D;&#x6CA1;&#x6709;&#x8003;&#x8651;&#x8FC7;rename&#x7B49;&#x7B49;&#x60C5;&#x51B5;&#xFF0C;&#x5BFC;&#x81F4;new_key, key, old_key &#x6CA1;&#x6CD5;&#x88AB;&#x5206;&#x914D;&#x5230;&#x540C;&#x4E00;&#x4E2A;solt&#x4E0A;&#xFF0C;&#x65B9;&#x6848;&#x4E5F;&#x5C31;&#x6CA1;&#x6CD5;&#x7528;&#x4E86;&#x3002; 2.3. &#x65B9;&#x6848;&#x4E09;&#x6B65;&#x9AA4;&#xFF1A; &#x7B5B;&#x9009;&#x6570;&#x636E;&#x5E93;&#x6570;&#x636E;&#x5BFC;&#x51FA;&#x5230;&#x6587;&#x4EF6;A &#x5199;&#x811A;&#x672C;&#x505A;&#x6570;&#x636E;&#x62C6;&#x5206; &#x5BFC;&#x51FA; redis &#x4E2D;&#x7684;&#x6570;&#x636E;&#x5230;&#x6587;&#x4EF6;B sort&#x3001;uniq&#x3001;diff &#x6BD4;&#x5BF9;A&#x3001;B&#x5DEE;&#x5F02; &#x4F18;&#x70B9;&#xFF1A; &#x6570;&#x636E;&#x540C;&#x6B65;&#x8F83;&#x9EBB;&#x70E6;&#xFF0C;&#x8981;&#x6839;&#x636E;&#x6570;&#x636E;&#x6BD4;&#x5BF9;&#x7ED3;&#x679C;&#x518D;&#x4E00;&#x6B65;&#x52A0;&#x5DE5;&#xFF0C;&#x4E0D;&#x8FC7;&#x9700;&#x8981;&#x540C;&#x6B65;&#x7684;&#x6570;&#x636E;&#x91CF;&#x5E94;&#x8BE5;&#x4E0D;&#x591A;&#x3002;&#x6570;&#x636E;&#x6BD4;&#x5BF9;&#x7684;&#x4F18;&#x70B9;&#x540C;&#x65B9;&#x6848;&#x4E8C;&#x7F3A;&#x70B9;&#xFF1A; &#x6570;&#x636E;&#x7ED3;&#x679C;&#x4E0D;&#x591F;&#x76F4;&#x89C2;&#xFF0C;&#x4E0D;&#x8FC7;&#x81EA;&#x5DF1;&#x5199;shell&#x8FD8;&#x662F;&#x80FD;&#x7B97;&#x51FA;&#x6765;&#x7684;&#x3002;&#x5176;&#x4ED6;&#xFF1A; &#x6570;&#x636E;&#x6BD4;&#x5BF9;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6848;&#x5E94;&#x8BE5;&#x662F;&#x6700;&#x5408;&#x9002;&#x7684;&#x4E86;&#xFF0C;&#x7B80;&#x5355;&#x3002; 3. &#x5B9E;&#x73B0;&#x524D;&#x671F;&#x4EC0;&#x4E48;&#x8BA8;&#x8BBA;&#x90FD;&#x6CA1;&#x53C2;&#x4E0E;&#xFF0C;&#x8FD9;&#x4E2A;&#x5DE5;&#x4F5C;&#x5C31;&#x843D;&#x5230;&#x4E86;&#x6211;&#x7684;&#x5934;&#x4E0A;&#xFF0C;Why&#xFF1F;&#x82B1;&#x4E86;&#x70B9;&#x65F6;&#x95F4;&#x505A;&#x9A8C;&#x8BC1;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x628A;&#x540E;&#x4E24;&#x4E2A;&#x65B9;&#x6848;&#x7684;&#x8BBE;&#x8BA1;&#x53CA;&#x53EF;&#x884C;&#x6027;&#x62A5;&#x544A;&#x505A;&#x51FA;&#x6765;&#x53CD;&#x9988;&#x4E86;&#x3002; &#x7136;&#x540E;&#x5927;&#x5BB6;&#x57FA;&#x672C;&#x4E0A;&#x90FD;&#x6BD4;&#x8F83;&#x8BA4;&#x540C;&#x65B9;&#x6848;&#x4E09;&#xFF0C;&#x6240;&#x4EE5;&#x5B9E;&#x73B0;&#x5C31;&#x6309;&#x7167;&#x8FD9;&#x4E2A;&#x6765;&#x4E86;&#x3002;&#x4E1A;&#x52A1;&#x4E0A;&#x6211;&#x4E0D;&#x592A;&#x61C2;&#xFF0C;sql&#x8BF7;&#x505A;&#x8FD9;&#x5757;&#x6570;&#x636E;&#x540C;&#x6B65;&#x7684;&#x540C;&#x4E8B;&#x5E2E;&#x5FD9;&#x5199;&#x7684;&#x3002; &#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x6253;&#x7B97;&#x7528;shell&#x5B8C;&#x6210;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x5F00;&#x53D1;&#x6548;&#x7387;&#x4E0D;&#x597D;&#x8BF4;&#xFF0C;&#x5355;&#x5C31;&#x8FD0;&#x884C;&#x73AF;&#x5883;&#x8FD9;&#x4E00;&#x9879;&#x5C31;&#x4E0D;&#x60F3;&#x8003;&#x8651;&#x4EC0;&#x4E48;python&#x3001;golang&#x3001;java&#x7B49;&#x7B49;&#x5B9E;&#x73B0;&#x4E86;&#xFF0C;&#x518D;&#x8BF4;&#x8FD9;&#x4E2A;&#x4EE5;&#x540E;&#x8981;&#x4EA4;&#x63A5;&#x51FA;&#x53BB;&#xFF0C;&#x53C8;&#x4E0D;&#x662F;&#x79C0;&#x6C34;&#x5E73;&#x6CA1;&#x5FC5;&#x8981;&#x7ED9;&#x81EA;&#x5DF1;&#x7559;&#x624B;&#x5C3E;&#x3002; 3.1. &#x811A;&#x672C;&#x6309;&#x7167;&#x65B9;&#x6848;&#x6765;&#xFF0C;&#x8003;&#x8651;&#x4E86;&#x4E0B;&#x662F;&#x548C; redis &#x4E2D;&#x7684; key &#x505A;&#x6BD4;&#x5BF9;&#xFF0C;&#x90A3;&#x5BFC;&#x51FA;&#x6570;&#x636E;&#x7684; sql &#x5C31;&#x51C6;&#x5907;&#x653E;&#x5728; ${key}.sql&#xFF0C;&#x6570;&#x636E;&#x62C6;&#x5206;&#x7528; awk &#x6765;&#x505A;&#xFF0C;&#x62C6;&#x5206;&#x6587;&#x4EF6;&#x653E;&#x5728; ${key}.awk &#x628A;&#x4E0B;&#x9762;&#x7684;shell&#x811A;&#x672C;&#x4E32;&#x8D77;&#x6765;&#x5C31;&#x662F;&#x5B8C;&#x6574;&#x7684;&#x811A;&#x672C;&#x4E86; 3.1.1. shell&#x5165;&#x53C2;1234if [ $# -lt 2 ]; then echo &quot;Usage: $0 user/pass@db key [redishostname:redisport]&quot; exit 1fi 3.1.2. &#x53C2;&#x6570;&#x521D;&#x59CB;&#x5316;123456789101112131415161718## SQLPLUS &#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x53C2;&#x6570;DB_LINK=$1REDIS_KEY=$2REDIS_CONNECT=$3REDIS_PORT=7000REDIS_HOSTNAME=127.0.0.1if [ &quot;x${REDIS_CONNECT}&quot; != &quot;x&quot; ]; then REDIS_HOSTNAME=`echo ${REDIS_CONNECT} |cut -d &quot;:&quot; -f 1` REDIS_PORT=`echo ${REDIS_CONNECT} |cut -d &quot;:&quot; -f 2`fiif [ &quot;x${REDIS_HOSTNAME}&quot; == &quot;x&quot; ]; then REDIS_HOSTNAME=127.0.0.1fiif [ &quot;x${REDIS_PORT}&quot; == &quot;x&quot; ]; then REDIS_PORT=7000fi 3.1.3. &#x6587;&#x4EF6;&#x540D;&#x8BBE;&#x7F6E;123456789## &#x5F53;&#x9700;&#x8981;&#x591A;&#x6B21;&#x6BD4;&#x5BF9;&#x5E76;&#x4FDD;&#x7559;&#x6BD4;&#x5BF9;&#x7ED3;&#x679C;&#x65F6;&#xFF0C;&#x7248;&#x672C;&#x53F7;&#x53EF;&#x4EE5;&#x7528;&#x5F53;&#x524D;&#x65F6;&#x95F4;VERSION=`date &quot;+%s%N&quot;`DB_OUTPUT=db${VERSION}.outputDB_OUTPUT_SPLIT=${DB_OUTPUT}.splitDB_OUTPUT_SORT=${DB_OUTPUT}.sortREDIS_OUTPUT=redis${VERSION}.outputREDIS_OUTPUT_SORT=${REDIS_OUTPUT}.sortDIFF_OUTPUT=diff${VERSION}.output 3.1.4. &#x6570;&#x636E;&#x5E93;&#x6570;&#x636E;&#x5BFC;&#x51FA;123456789101112131415161718192021222324252627282930313233which sqlplus 2&gt;&amp;1ECODE=$?if [ $ECODE -ne 0 ]; then echo &quot;&#x5F53;&#x524D;&#x73AF;&#x5883;&#x7F3A;&#x5C11; sqlplus &#x547D;&#x4EE4;&#xFF0C;&#x811A;&#x672C;&#x65E0;&#x6CD5;&#x6267;&#x884C;&#xFF0C;&#x8BF7;&#x8865;&#x5145;&#x8BBE;&#x7F6E;&#x6216;&#x62C6;&#x5206;&#x811A;&#x672C;&#x81F3;&#x5176;&#x4ED6;&#x673A;&#x5668;&#x6267;&#x884C;&quot; exit $ECODEfiecho &quot;&#x4F7F;&#x7528;SQL&#x6587;&#x4EF6; ${REDIS_KEY}.sql &#x5BFC;&#x51FA;&#x6570;&#x636E;&quot;## &#x53C2;&#x6570;&#x53C2;&#x8003;&#xFF1A;http://docs.oracle.com/cd/B19306_01/server.102/b14357/ch12040.htm#i2699269sqlplus -s ${DB_LINK}&lt;&lt;EOFSET COLSEP &apos;_&apos;;SET ECHO OFF;SET FEEDBACK OFF;SET TERMOUT OFF;SET NEWPAGE NONE;SET HEADING OFF;SET SPACE 0;SET PAGESIZE 0;SET TRIMOUT ON;SET TRIMSPOOL ON;SET LINESIZE 2500;SPOOL ${DB_OUTPUT}@${REDIS_KEY}.sql;EOFECODE=$?if [ $ECODE -eq 0 ]; then echo &quot;&#x6210;&#x529F;&#x5BFC;&#x51FA;&#x6570;&#x636E;&#x5E93;&#x6587;&#x4EF6;&quot;else echo &quot;&#x5BFC;&#x51FA;&#x6570;&#x636E;&#x5E93;&#x6587;&#x4EF6;&#x5931;&#x8D25;&quot; exit $ECODEfi 3.1.5. redis &#x6570;&#x636E;&#x5BFC;&#x51FA;1234567891011121314151617which redis-cli 2&gt;&amp;1ECODE=$?if [ $ECODE -ne 0 ]; then echo &quot;&#x5F53;&#x524D;&#x73AF;&#x5883;&#x7F3A;&#x5C11; sqlplus &#x547D;&#x4EE4;&#xFF0C;&#x811A;&#x672C;&#x65E0;&#x6CD5;&#x6267;&#x884C;&#xFF0C;&#x8BF7;&#x8865;&#x5145;&#x8BBE;&#x7F6E;&#x6216;&#x62C6;&#x5206;&#x811A;&#x672C;&#x81F3;&#x5176;&#x4ED6;&#x673A;&#x5668;&#x6267;&#x884C;&quot; exit $ECODEfiecho &quot;&#x4F7F;&#x7528;REDIS&#x547D;&#x4EE4; smembers $REDIS_KEY &#x5BFC;&#x51FA;&#x6570;&#x636E;&quot;redis-cli -c -h ${REDIS_HOSTNAME} -p ${REDIS_PORT} smembers $REDIS_KEY &gt; ${REDIS_OUTPUT}ECODE=$?if [ $ECODE -eq 0 ]; then echo &quot;&#x6210;&#x529F;&#x5BFC;&#x51FA;REDIS &#x6587;&#x4EF6;&quot;else echo &quot;&#x5BFC;&#x51FA;REDIS &#x6587;&#x4EF6;&#x5931;&#x8D25;&quot; exit $ECODEfi 3.1.6. &#x6570;&#x636E;&#x5E93;&#x5BFC;&#x51FA;&#x6570;&#x636E;&#x518D;&#x5904;&#x7406;123456789101112## &#x6570;&#x636E;&#x5E93;&#x6570;&#x636E;&#x9700;&#x8981;&#x518D;&#x5904;&#x7406;SPLIT_FILE=${REDIS_KEY}.awkif [ -f ${SPLIT_FILE} ]; then echo &quot;&#x4F7F;&#x7528;AWK&#x6587;&#x4EF6; ${SPLIT_FILE} &#x505A;&#x6570;&#x636E;&#x62C6;&#x5206;&quot; awk -f ${SPLIT_FILE} ${DB_OUTPUT} &gt; ${DB_OUTPUT_SPLIT}fiif [ -f ${DB_OUTPUT_SPLIT} ];then echo &quot;&#x6570;&#x636E;&#x62C6;&#x5206;&#x5B8C;&#x6210;&quot;else cp ${DB_OUTPUT} ${DB_OUTPUT_SPLIT}fi 3.1.7. &#x6BD4;&#x5BF9;&#x524D;&#x51C6;&#x5907;123## &#x6574;&#x7406;&#x6BD4;&#x5BF9;&#x6570;&#x636E;&#xFF0C;&#x6392;&#x5E8F;&#x53BB;&#x91CD;sort ${DB_OUTPUT_SPLIT} |uniq &gt; ${DB_OUTPUT_SORT}sort ${REDIS_OUTPUT} |uniq &gt; ${REDIS_OUTPUT_SORT} 3.1.8. &#x6BD4;&#x5BF9;&#x6570;&#x636E;12## &#x6BD4;&#x5BF9;&#x6570;&#x636E;diff -y --suppress-common-lines ${DB_OUTPUT_SORT} ${REDIS_OUTPUT_SORT} &gt; ${DIFF_OUTPUT} 2&gt;&amp;1 3.1.9. &#x7EDF;&#x8BA1;1234567891011121314151617181920212223242526## &#x7EDF;&#x8BA1;&#x884C;&#x6570;&#xFF0C;&#x7528;&#x4E8E;&#x6700;&#x540E;&#x8F93;&#x51FA;DB_TOTAL=`wc -l ${DB_OUTPUT} |cut -d &apos; &apos; -f 1`DB_SPLIT_TOTAL=`wc -l ${DB_OUTPUT_SPLIT} |cut -d &apos; &apos; -f 1`DB_SORT_TOTAL=`wc -l ${DB_OUTPUT_SORT} |cut -d &apos; &apos; -f 1`REDIS_TOTAL=`wc -l ${REDIS_OUTPUT} |cut -d &apos; &apos; -f 1`REDIS_SORT_TOTAL=`wc -l ${REDIS_OUTPUT_SORT} |cut -d &apos; &apos; -f 1`DIFF_TOTAL=`wc -l ${DIFF_OUTPUT} |cut -d &apos; &apos; -f 1`DB_GT=`grep &quot;&lt;&quot; ${DIFF_OUTPUT} |wc -l`REDIS_GT=`grep &quot;&gt;&quot; ${DIFF_OUTPUT} |wc -l`## &#x540C;&#x4E00;&#x884C;&#x6570;&#x636E;&#x4E0D;&#x4E00;&#x81F4;NEQ=`grep &quot;|&quot; ${DIFF_OUTPUT} |wc -l`let EQ=${DB_SORT_TOTAL}-${DB_GT}echo &quot;==================================================&quot;echo &quot;&#x6570;&#x636E;&#x5E93;&#x751F;&#x6548;&#x6570;&#x636E;&#x603B; ${DB_TOTAL} &#x6761;&quot;echo &quot;&#x6570;&#x636E;&#x5E93;&#x62C6;&#x5206;&#x540E;&#x6570;&#x636E; ${DB_SPLIT_TOTAL} &#x6761;&quot;echo &quot;&#x6570;&#x636E;&#x5E93;&#x672A;&#x91CD;&#x590D;&#x6570;&#x636E; ${DB_SORT_TOTAL} &#x6761;&quot;echo &quot;REDIS &#x751F;&#x6548;&#x6570;&#x636E;&#x603B; ${REDIS_TOTAL} &#x6761;&quot;echo &quot;REDIS &#x672A;&#x91CD;&#x590D;&#x6570;&#x636E; ${REDIS_SORT_TOTAL} &#x6761;&quot;echo &quot;&#x6570;&#x636E;&#x5E93;REDIS &#x76F8;&#x540C; ${EQ} &#x6761;&quot;echo &quot;&#x6570;&#x636E;&#x5E93;&#x6BD4;REDIS &#x591A; ${DB_GT} &#x6761;&quot;echo &quot;REDIS &#x6BD4;&#x6570;&#x636E;&#x5E93;&#x591A; ${REDIS_GT} &#x6761;&quot;echo &quot;==================================================&quot; 3.2. &#x5BFC;&#x51FA;SQL&#x5199;&#x4E86;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;&#xFF0C;sql&#x6587;&#x4EF6;&#x8981;&#x653E;&#x5230; ${key}.sql 1select &apos;1_2_3_4_5_6_7&apos; from dual; 3.3. AWK&#x62C6;&#x5206;&#x6587;&#x4EF6; &#x5C06;&#x7701;&#x4EFD;&#x662F;000&#x7684;&#xFF0C;&#x62C6;&#x5206;&#x6210;&#x6240;&#x6709;&#x7701;&#x4EFD;&#xFF1B;&#x5426;&#x5219;&#x5C06;&#x7701;&#x4EFD;&#x5B57;&#x6BB5;&#x76F4;&#x63A5;&#x6309;&#x9017;&#x53F7;&#x5206;&#x9694;&#x3002; &#x5C06;&#x4EA7;&#x54C1;&#x7EBF;&#x662F;0&#x7684;&#xFF0C;&#x62C6;&#x5206;&#x4EA7;&#x54C1;0-4&#x7684;5&#x6761; 12345678910111213141516171819BEGIN { FS=&quot;_&quot;}{ split(&quot;0,1,2,3,4&quot;, LINE, &quot;,&quot;) split($5, EFFECT_PROV, &quot;,&quot;) if ( $5 == &quot;000&quot; ) { split(&quot;100,200,210,220,230,240,250,270,280,290,311,351,371,431,451,471,531,551,571,591,731,771,791,851,871,891,898,931,951,971,991&quot;, EFFECT_PROV, &quot;,&quot;) } for (x in EFFECT_PROV) { if ( $7 == &quot;0&quot;) { for (i in LINE) { print $1 &quot;_&quot; $2 &quot;_&quot; $3 &quot;_&quot; $4 &quot;_&quot; EFFECT_PROV[x] &quot;_&quot; $6 &quot;_&quot; LINE[i] } } else { print $1 &quot;_&quot; $2 &quot;_&quot; $3 &quot;_&quot; $4 &quot;_&quot; EFFECT_PROV[x] &quot;_&quot; $6 &quot;_&quot; $7 } }}","tags":[]},{"title":"spring中的动态数据源（多数据源及读写分离）","date":"2017-01-21T02:00:59.000Z","path":"2017/01/21/dynamic-data-source-in-spring/","text":"1. &#x7EE7;&#x627F;AbstractRoutingDataSource1.1. &#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x6E90;&#x5217;&#x8868;1private Map&lt;Object, Object&gt; targetDataSources; targetDataSources&#x7684;key&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x662F;&#x540E;&#x7EED; determineCurrentLookupKey() &#x65B9;&#x6CD5;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B; 1.2. &#x8BBE;&#x7F6E;&#x9ED8;&#x8BA4;&#x6570;&#x636E;&#x6E90;&#x6570;&#x636E;&#x6E90;&#x5217;&#x8868;1private Object defaultTargetDataSource; &#x9ED8;&#x8BA4;&#x6570;&#x636E;&#x6E90;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x8BFB;&#x6570;&#x636E;&#x6E90;&#x5F15;&#x7528;&#x8FC7;&#x6765;&#x3002; 1.3. &#x5B9E;&#x73B0;&#x7236;&#x7C7B;&#x865A;&#x65B9;&#x6CD5;12345678/** * Determine the current lookup key. This will typically be * implemented to check a thread-bound transaction context. * &lt;p&gt;Allows for arbitrary keys. The returned key needs * to match the stored lookup key type, as resolved by the * {@link #resolveSpecifiedLookupKey} method. */protected abstract Object determineCurrentLookupKey(); 123456public class DynamicDataSource extends AbstractRoutingDataSource { @Override protected Object determineCurrentLookupKey() { return DataSourceContextHolder.getType(); }} 2. &#x591A;&#x6570;&#x636E;&#x6E90;(&#x8BFB;&#x5199;&#x5206;&#x79BB;)&#x81EA;&#x52A8;&#x5207;&#x6362;&#x4F7F;&#x7528;AOP&#x6280;&#x672F;&#xFF0C;&#x62E6;&#x622A;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x6E90;&#xFF08;&#x8BFB;&#x5199;&#xFF09;&#x5206;&#x79BB;&#x7684;sql&#x64CD;&#x4F5C;&#xFF0C;&#x6267;&#x884C;&#x64CD;&#x4F5C;&#xFF1A; 12DataSourceContextHolder.setType(Operation.READ);DataSourceContextHolder.setType(Operation.WRITE); &#x591A;&#x7EBF;&#x7A0B;&#x5E76;&#x53D1;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4E3A;&#x4FDD;&#x8BC1;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#xFF0C;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x6570;&#x636E;&#x6E90;&#x5207;&#x6362;&#xFF0C;&#x53EF;&#x4F7F;&#x7528; ThreadLocal &#x5C01;&#x88C5; DataSourceContextHolder.getType()","tags":[]},{"title":"动态日志级别设置","date":"2017-01-13T06:45:43.000Z","path":"2017/01/13/dynamic-logger-level/","text":"1. &#x601D;&#x8DEF;&#x4F7F;&#x7528; spring-jmx&#x3001;jolokia &#x5C06; JMX &#x5C01;&#x88C5;&#x5E76;&#x66B4;&#x9732; restful &#x63A5;&#x53E3;&#xFF0C;&#x4FBF;&#x4E8E;&#x64CD;&#x4F5C;&#x3002; 2. logback &#x5B9E;&#x73B0;2.1. JMXConfiguratorMBean&#x63A5;&#x53E3; ch.qos.logback.classic.jmx.JMXConfiguratorMBean &#x63D0;&#x4F9B;&#x4E86;&#x5982;&#x4E0B;&#x64CD;&#x4F5C;&#x5165;&#x53E3;&#xFF1A; 123456789101112131415void reloadDefaultConfiguration() throws JoranException;void reloadByFileName(String fileName) throws JoranException, FileNotFoundException;void reloadByURL(URL url) throws JoranException;void setLoggerLevel(String loggerName, String levelStr);String getLoggerLevel(String loggerName);String getLoggerEffectiveLevel(String loggerName);List&lt;String&gt; getLoggerList();List&lt;String&gt; getStatuses(); 2.2. JMXConfigurator&#x7C7B; ch.qos.logback.classic.jmx.JMXConfigurator &#x5B9E;&#x73B0;&#x4E86; JMXConfiguratorMBean&#x3002; &#x5B9E;&#x4F8B;&#x5316; JMXConfigurator &#x5E76;&#x4F7F;&#x7528; spring-jmx &#x66B4;&#x9732;&#x3002; &#x8BE5;&#x7C7B;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x4E2D;&#x7684; ch.qos.logback.classic.LoggerContext &#x5BF9;&#x8C61;&#xFF0C;&#x53EF;&#x901A;&#x8FC7; (LoggerContext) LoggerFactory.getILoggerFactory() &#x83B7;&#x53D6;&#x3002; 3. log4j2 &#x5B9E;&#x73B0;log4j2 &#x4E2D;&#x672A;&#x63D0;&#x4F9B; JMX &#x64CD;&#x4F5C;&#x63A5;&#x53E3;&#xFF0C;&#x4E0D;&#x8FC7;&#x901A;&#x8FC7;&#x67E5;&#x770B;&#x6E90;&#x7801;&#x53EF;&#x77E5;&#xFF1A; org.apache.logging.slf4j.Log4jLogger&#xFF0C;&#x662F; slf4j &#x7684; log4j2 &#x6865;&#x63A5;&#x5B9E;&#x73B0; Log4jLogger &#x662F;&#x4EE3;&#x7406;&#x7684; org.apache.logging.log4j.spi.ExtendedLogger &#x5177;&#x4F53;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x529F;&#x80FD; &#x88AB;&#x4EE3;&#x7406;&#x7684; ExtendedLogger &#x662F;&#x901A;&#x8FC7; org.apache.logging.log4j.spi.LoggerContext#getLogger(java.lang.String) &#x5B9E;&#x4F8B;&#x5316;&#x7684; getLogger &#x662F;&#x901A;&#x8FC7;&#x5728; org.apache.logging.log4j.core.LoggerContext#newInstance new &#x4E00;&#x4E2A; org.apache.logging.log4j.core.Logger &#x7684;&#x5B9E;&#x4F8B; org.apache.logging.log4j.core.Logger &#x63D0;&#x4F9B;&#x4E86; org.apache.logging.log4j.core.Logger#setLevel &#x65B9;&#x6CD5;&#x8BBE;&#x7F6E;&#x65E5;&#x5FD7;&#x7EA7;&#x522B; &#x56E0;&#x6B64;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528; spring-jmx &#x5C01;&#x88C5;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x63D0;&#x4F9B; setLevel &#x65B9;&#x6CD5;&#xFF0C;&#x5728;&#x8BE5;&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x901A;&#x8FC7; org.apache.logging.log4j.LogManager#getLogger(java.lang.String) &#x83B7;&#x53D6;&#x5230; logger&#xFF0C;&#x518D;&#x8C03;&#x7528;&#x8BE5; logger &#x7684; setLevel &#x65B9;&#x6CD5;&#x5373;&#x53EF;&#xFF1B; &#x7531;&#x4E8E; org.apache.logging.log4j.core.LoggerContext#loggerRegistry &#x7F13;&#x5B58;&#x4E86;&#x540C;&#x540D;&#x7684;&#x7684; logger&#xFF0C;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x8BBE;&#x7F6E;&#x7684;&#x5176;&#x4ED6;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x540C;&#x4E00;&#x4E2A; logger &#x5B9E;&#x4F8B;&#x3002;","tags":[]},{"title":"RocketMQ系列0x6——rocketmq-broker","date":"2016-08-28T15:00:46.000Z","path":"2016/08/28/rocketmq-0x6/","text":"","tags":[{"name":"rocketmq","slug":"rocketmq","permalink":"http://hiant.github.io/tags/rocketmq/"},{"name":"rocketmq-broker","slug":"rocketmq-broker","permalink":"http://hiant.github.io/tags/rocketmq-broker/"}]},{"title":"RocketMQ系列0x5——rocketmq-namesrv","date":"2016-08-26T14:37:54.000Z","path":"2016/08/26/rocketmq-0x5/","text":"1. &#x89E3;&#x8BFB;1.1. NamesrvStartup &#x5904;&#x7406;&#x6D41;&#x7A0B; &#x8BBE;&#x7F6E;&#x7248;&#x672C;&#x53F7; com.alibaba.rocketmq.namesrv.processor.DefaultRequestProcessor#processRequest com.alibaba.rocketmq.broker.processor.AdminBrokerProcessor#callConsumer &#x8BBE;&#x7F6E;Socket&#x7F13;&#x51B2;&#x533A; &#x5982;&#x679C;&#x6CA1;&#x6709;&#x8BBE;&#x7F6E; SEND &#x7F13;&#x51B2;&#x533A;&#xFF1A;NettySystemConfig.SocketSndbufSize = 2048 &#x5982;&#x679C;&#x6CA1;&#x6709;&#x8BBE;&#x7F6E; RECV &#x7F13;&#x51B2;&#x533A;&#xFF1A;NettySystemConfig.SocketRcvbufSize = 2048 FastJson&#x7248;&#x672C;&#x51B2;&#x7A81;&#x68C0;&#x6D4B; com.alibaba.rocketmq.common.conflict.PackageConflictDetect#detectFastjson &#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x89E3;&#x6790; &#x4F7F;&#x7528; com.alibaba.rocketmq.srvutil.ServerUtil#parseCmdLine &#x89E3;&#x6790;&#x547D;&#x4EE4;&#x884C;&#xFF0C;&#x5982;&#x679C;&#x89E3;&#x6790;&#x5931;&#x8D25;&#xFF0C;&#x5219;&#x7A0B;&#x5E8F;&#x9000;&#x51FA; &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x52A0;&#x8F7D; &#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x5305;&#x542B; -c &#x9009;&#x9879;&#xFF0C;&#x5219;&#x52A0;&#x8F7D;&#x6307;&#x5B9A;&#x7684; properties &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x901A;&#x8FC7; com.alibaba.rocketmq.common.MixAll#properties2Object &#x8BBE;&#x7F6E; NamesrvConfig&#x3001;NettyServerConfig&#x3002;&#x5176;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x914D;&#x7F6E;&#x4E2D;&#x6CA1;&#x6709;&#x8BBE;&#x7F6E; ListenPort&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A; 9876 &#x8F93;&#x51FA;&#x914D;&#x7F6E;&#x53C2;&#x6570;&#x5217;&#x8868; &#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x5305;&#x542B; -p &#x9009;&#x9879;&#xFF0C;&#x5219;&#x901A;&#x8FC7; com.alibaba.rocketmq.common.MixAll#printObjectProperties(org.slf4j.Logger, java.lang.Object) &#x8F93;&#x51FA; NamesrvConfig&#x3001;NettyServerConfig &#x7684;&#x58F0;&#x660E;&#x5B57;&#x6BB5;&#xFF0C;&#x8F93;&#x51FA;&#x5B8C;&#x6210;&#x540E;&#x7A0B;&#x5E8F;&#x9000;&#x51FA; &#x914D;&#x7F6E; NamesrvConfig &#x901A;&#x8FC7; com.alibaba.rocketmq.common.MixAll#properties2Object &#x5C06;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x52A0;&#x5230; NamesrvConfig &#x914D;&#x7F6E; logback logback &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x56FA;&#x5B9A;&#xFF1A;namesrvConfig.getRocketmqHome() + &quot;/conf/logback_namesrv.xml&quot;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x6B64;&#x524D;&#x4F1A;&#x5148;&#x5224;&#x65AD; namesrvConfig.getRocketmqHome() &#x672A;&#x8BBE;&#x7F6E;&#x65F6;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x7A0B;&#x5E8F;&#x9000;&#x51FA;&#x3002;&#x4E0D;&#x8FC7;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4EC5;&#x53D1;&#x751F;&#x5728;&#x76F4;&#x63A5;&#x8FD0;&#x884C; com.alibaba.rocketmq.namesrv.NamesrvStartup#main&#xFF0C;&#x5982;&#x679C;&#x662F;&#x811A;&#x672C;&#x542F;&#x52A8;&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x5C06;&#x8BE5;&#x503C;&#x8BBE;&#x7F6E;&#x4E3A; mqnamesrv &#x811A;&#x672C;&#x7684;&#x4E0A;&#x4E0A;&#x5C42;&#x76EE;&#x5F55; &#x5B9E;&#x4F8B;&#x5316;&#x5E76;&#x521D;&#x59CB;&#x5316; NamesrvController &#x4F7F;&#x7528; NamesrvConfig&#x3001;NettyServerConfig &#x5B9E;&#x4F8B;&#x5316; NamesrvController &#x7136;&#x540E;&#x8C03;&#x7528; com.alibaba.rocketmq.namesrv.NamesrvController#initialize &#x521D;&#x59CB;&#x5316;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x5931;&#x8D25;&#x65F6;&#x7A0B;&#x5E8F;&#x9000;&#x51FA; &#x5426;&#x5219;&#x589E;&#x52A0; ShutdownHook &#xFF0C;&#x5728;&#x7A0B;&#x5E8F;&#x9000;&#x51FA;&#x65F6;&#x8BB0;&#x5F55;&#x65E5;&#x5FD7;&#xFF0C;&#x5E76;&#x8C03;&#x7528; com.alibaba.rocketmq.namesrv.NamesrvController#shutdown &#x91CA;&#x653E;&#x8D44;&#x6E90; &#x542F;&#x52A8; NamesrvController&#x8C03;&#x7528; com.alibaba.rocketmq.namesrv.NamesrvController#start &#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x5DE5;&#x4F5C; 1.2. NamesrvController &#x521D;&#x59CB;&#x5316;&#x6D41;&#x7A0B; &#x52A0;&#x8F7D; KvConfig &#x5982;&#x679C; NamesrvConfig &#x4E2D; kvConfigPath &#x8DEF;&#x5F84;&#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x5C06;&#x6587;&#x4EF6;&#x5B58;&#x50A8;&#x7684; json &#x5185;&#x5BB9;&#x52A0;&#x8F7D;&#x8FDB;Map&#xFF1A;HashMap&lt;String/* Namespace */, HashMap&lt;String/* Key */, String/* Value */&gt;&gt; &#x5B9E;&#x4F8B;&#x5316; NettyRemotingServer rocketmq-remoting &#x6A21;&#x5757;&#x4E2D;&#x7684; com.alibaba.rocketmq.remoting.netty.NettyRemotingServer#NettyRemotingServer(com.alibaba.rocketmq.remoting.netty.NettyServerConfig, com.alibaba.rocketmq.remoting.ChannelEventListener) &#x6784;&#x9020; RemotingExecutorThread &#x7EBF;&#x7A0B;&#x6C60; &#x4F7F;&#x7528; java.util.concurrent.Executors#newFixedThreadPool(int, java.util.concurrent.ThreadFactory) &#x6784;&#x9020;&#x56FA;&#x5B9A;&#x6570;&#x76EE;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x6570;&#x76EE;&#x7531; NettyServerConfig.getServerWorkerThreads &#x51B3;&#x5B9A; &#x6CE8;&#x518C; NamesrvConfig &#x4E2D; clusterTest &#x4E3A; true &#x65F6;&#xFF0C;&#x8C03;&#x7528; com.alibaba.rocketmq.remoting.RemotingServer#registerDefaultProcessor &#x5C06;&#x4E00;&#x4E2A; com.alibaba.rocketmq.namesrv.processor.ClusterTestRequestProcessor &#x548C; RemotingExecutorThread &#x7EBF;&#x7A0B;&#x6C60;&#x7ED1;&#x5B9A;&#x8D77;&#x6765;&#xFF1B;&#x5426;&#x5219;&#x5C06;&#x4E00;&#x4E2A; com.alibaba.rocketmq.namesrv.processor.DefaultRequestProcessor &#x548C; RemotingExecutorThread &#x7EBF;&#x7A0B;&#x6C60;&#x7ED1;&#x5B9A;&#x8D77;&#x6765;&#x3002;&#x7ED1;&#x5B9A;&#x5230; NettyRemotingServer &#x7684; defaultRequestProcessor &#x4E0A; &#x4E24;&#x8005;&#x533A;&#x522B;&#xFF1A; ClusterTestRequestProcessor &#x7EE7;&#x627F;&#x81EA; DefaultRequestProcessor &#x5E76;&#x91CD;&#x5199;&#x4E86; getRouteInfoByTopic &#x65B9;&#x6CD5;&#xFF0C;RouteInfoManager &#x4E2D;&#x672A;&#x80FD;&#x83B7;&#x53D6;&#x5230; TopicRouteData &#x65F6;&#xFF0C;&#x53BB;&#x96C6;&#x7FA4;&#x4E0A;&#x67E5;&#x8BE2;&#x4E00;&#x6B21; &#x542F;&#x52A8;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1; 5s &#x540E;&#x542F;&#x52A8;&#xFF0C;&#x6BCF;&#x9694; 10s &#x6267;&#x884C;&#x4E00;&#x6B21;&#xFF1A;&#x6E05;&#x7406;&#x5931;&#x6548;&#x7684; Broker &#x4FE1;&#x606F; 1m &#x540E;&#x542F;&#x52A8;&#xFF0C;&#x6BCF;&#x9694; 10m &#x6267;&#x884C;&#x4E00;&#x6B21;&#xFF1A;&#x5728;&#x65E5;&#x5FD7;&#x4E2D; INFO &#x7EA7;&#x522B;&#x8F93;&#x51FA; KvConfig &#x7684;&#x5185;&#x5BB9; 1.3. NamesrvController &#x542F;&#x52A8;&#x6D41;&#x7A0B;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x542F;&#x52A8; NamesrvController &#x7684; NettyRemotingServer &#x6784;&#x9020; DefaultEventExecutorGroup &#x7EBF;&#x7A0B;&#x6570;&#x76EE;&#x7531; NettyServerConfig.getServerWorkerThreads &#x51B3;&#x5B9A;&#xFF0C;&#x7EBF;&#x7A0B;&#x540D;&#xFF1A;&quot;NettyServerCodecThread_&quot; + this.threadIndex.incrementAndGet() &#x6784;&#x9020; BOSS &#x7EBF;&#x7A0B; &#x7EBF;&#x7A0B;&#x6570;&#x56FA;&#x5B9A;&#x4E3A;1&#xFF0C;&#x7EBF;&#x7A0B;&#x540D;&#xFF1A;NettyBoss_1 &#x6784;&#x9020; WORKER &#x7EBF;&#x7A0B; &#x5982;&#x679C;&#x662F; Linux&#xFF0C;&#x4E14; NettyServerConfig &#x4E2D; useEpollNativeSelector &#x4E3A; true&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; EpollEventLoopGroup&#xFF0C;&#x7EBF;&#x7A0B;&#x6570;&#x76EE;&#x7531; NettyServerConfig.getServerSelectorThreads &#x51B3;&#x5B9A;&#xFF0C;&#x7EBF;&#x7A0B;&#x540D;&#xFF1A;String.format(&quot;NettyServerEPOLLSelector_%d_%d&quot;, threadTotal, this.threadIndex.incrementAndGet())&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; NioEventLoopGroup&#xFF0C;&#x7EBF;&#x7A0B;&#x6570;&#x76EE;&#x7531; NettyServerConfig.getServerSelectorThreads &#x51B3;&#x5B9A;&#xFF0C;&#x7EBF;&#x7A0B;&#x540D;&#xFF1A;String.format(&quot;NettyServerNIOSelector_%d_%d&quot;, threadTotal, this.threadIndex.incrementAndGet()) &#x914D;&#x7F6E; ServerBootstrap ChannelOption.SO_BACKLOG&#xFF1A;1024 ChannelOption.SO_REUSEADDR&#xFF1A;true ChannelOption.SO_KEEPALIVE&#xFF1A;false ChannelOption.SO_SNDBUF&#xFF1A;nettyServerConfig.getServerSocketSndBufSize() ChannelOption.SO_RCVBUF&#xFF1A;nettyServerConfig.getServerSocketRcvBufSize() ChannelOption.TCP_NODELAY&#xFF1A;true &#x8BBE;&#x7F6E;&#x7684;&#x662F;childOption localAddress&#xFF1A;new InetSocketAddress(this.nettyServerConfig.getListenPort()) childHandler&#xFF1A; NettyEncoder&#xFF1A;&#x7F16;&#x7801; NettyDecoder&#xFF1A;&#x89E3;&#x7801; IdleStateHandler&#xFF1A;&#x7A7A;&#x95F2;&#x5904;&#x7406;&#xFF0C;&#x7A7A;&#x95F2;&#x65F6;&#x95F4;&#x7531; nettyServerConfig.getServerChannelMaxIdleTimeSeconds() &#x51B3;&#x5B9A; NettyConnetManageHandler&#xFF1A;&#x8FDE;&#x63A5;&#x7BA1;&#x7406;&#xFF0C;&#x8BB0;&#x5F55;&#x8FDE;&#x63A5;&#x65E5;&#x5FD7;&#xFF0C;&#x5E76;&#x5904;&#x7406;&#x8FDE;&#x63A5;&#x4E8B;&#x4EF6;&#xFF08;&#x7A7A;&#x95F2;&#x4E8B;&#x4EF6;&#xFF09; NettyServerHandler&#xFF1A;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5904;&#x7406;&#x3002;&#x6839;&#x636E; RemotingCommand &#x7684; type &#x8C03;&#x7528; com.alibaba.rocketmq.remoting.netty.NettyRemotingAbstract#processRequestCommand &#x6216; com.alibaba.rocketmq.remoting.netty.NettyRemotingAbstract#processResponseCommand NettyServerConfig &#x672A;&#x5C06; serverPooledByteBufAllocatorEnable &#x8BBE;&#x7F6E;&#x4E3A; false&#xFF0C;&#x5219; ChannelOption.ALLOCATOR &#x8BBE;&#x7F6E;&#x4E3A; PooledByteBufAllocator.DEFAULT&#xFF0C;&#x5373;&#x9ED8;&#x8BA4;&#x5F00;&#x542F; Netty &#x7684;&#x6C60;&#x5316; ByteBuf &#x542F;&#x52A8; ServerBootstrap&#x8C03;&#x7528; io.netty.bootstrap.AbstractBootstrap#bind() &#x542F;&#x52A8;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;3s &#x540E;&#x542F;&#x52A8;&#xFF0C;&#x6BCF;&#x9694; 1s &#x6267;&#x884C;&#x4E00;&#x6B21;&#xFF1A;&#x5904;&#x7406;&#x8D85;&#x65F6;&#x8BF7;&#x6C42; ###","tags":[{"name":"rocketmq","slug":"rocketmq","permalink":"http://hiant.github.io/tags/rocketmq/"},{"name":"rocketmq-namesrv","slug":"rocketmq-namesrv","permalink":"http://hiant.github.io/tags/rocketmq-namesrv/"}]},{"title":"RocketMQ系列0x4——rocketmq-srvutil","date":"2016-08-21T13:48:14.000Z","path":"2016/08/21/rocketmq-0x4/","text":"1. &#x89E3;&#x8BFB;&#x6574;&#x4E2A; module &#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6709;&#x6548;&#x6587;&#x4EF6;&#xFF1A;com.alibaba.rocketmq.srvutil.ServerUtil &#x5728; Apache Commons CLI &#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x5C01;&#x88C5;&#x4E86;&#x670D;&#x52A1;&#x7AEF;&#x547D;&#x4EE4;&#x884C;&#x7684;4&#x4E2A;&#x9759;&#x6001;&#x65B9;&#x6CD5; public static Options buildCommandlineOptions(final Options options) &#x5728; options &#x4E2D;&#x589E;&#x52A0; -h(--help) &#x548C; -n(--namesrvAddr) public static CommandLine parseCmdLine(final String appName, String[] args, Options options, CommandLineParser parser) &#x547D;&#x4EE4;&#x884C;&#x9009;&#x9879;&#x89E3;&#x6790;&#x5931;&#x8D25;&#x6216; commandLine &#x4E2D;&#x542B;&#x6709; -h &#x9009;&#x9879;&#x65F6;&#xFF0C;&#x5B9E;&#x4F8B;&#x5316; width &#x4E3A; 110 &#x7684; org.apache.commons.cli.HelpFormatter &#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x8C03;&#x7528; printHelp &#x65B9;&#x6CD5;&#x8F93;&#x51FA;&#x547D;&#x4EE4;&#x884C;&#x7684;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;&#xFF1B;&#x5426;&#x5219;&#x8FD4;&#x56DE;&#x89E3;&#x6790;&#x540E;&#x7684; commandLine public static void printCommandLineHelp(final String appName, final Options options) &#x5B9E;&#x4F8B;&#x5316; width &#x4E3A; 110 &#x7684; org.apache.commons.cli.HelpFormatter &#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x8C03;&#x7528; printHelp &#x65B9;&#x6CD5;&#x8F93;&#x51FA;&#x547D;&#x4EE4;&#x884C;&#x7684;&#x5E2E;&#x52A9;&#x4FE1;&#x606F; public static Properties commandLine2Properties(final CommandLine commandLine) &#x904D;&#x5386; commandLine &#x4E2D;&#x7684; Option[]&#xFF0C;&#x4EE5; option &#x7684; LongOption &#x505A;&#x4E3A; key &#xFF0C;&#x5C06;&#x5BF9;&#x5E94;&#x7684; value &#x52A0;&#x5165; Properties &#x5BF9;&#x8C61;&#x5B9E;&#x4F8B;&#x4E2D;","tags":[{"name":"rocketmq","slug":"rocketmq","permalink":"http://hiant.github.io/tags/rocketmq/"},{"name":"rocketmq-srvutil","slug":"rocketmq-srvutil","permalink":"http://hiant.github.io/tags/rocketmq-srvutil/"}]},{"title":"RocketMQ系列0x3——rocketmq-common","date":"2016-08-18T11:25:21.000Z","path":"2016/08/18/rocketmq-0x3/","text":"1. Maven&#x4F9D;&#x8D56;&#x56FE;&#x4F7F;&#x7528; IDEA &#x53EF;&#x4EE5;&#x770B;&#x5230; compile &#x7EA7;&#x522B;&#x7684;&#x4F9D;&#x8D56;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; 2. &#x89E3;&#x8BFB;rocketmq-common &#x4E3B;&#x8981;&#x5C01;&#x88C5;&#x4E86;&#x4E00;&#x4E9B;&#x901A;&#x7528;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x3001;&#x679A;&#x4E3E;&#x3001;&#x5E38;&#x91CF;&#x7B49;&#x5B9A;&#x4E49;&#xFF0C;&#x4EE5;&#x53CA;&#x4E00;&#x4E9B;&#x7EF4;&#x62A4;&#x547D;&#x4EE4;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9010;&#x4E2A;package&#x7406;&#x89E3;&#x4E00;&#x4E0B;&#x3002; 2.1. common class &#x8BF4;&#x660E; BrokerConfig Broker&#x7684;&#x914D;&#x7F6E;JavaBean&#xFF0C;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x7ED3;&#x6784;&#xFF1A; rocketmqHome&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; System.getProperty(MixAll.ROCKETMQ_HOME_PROPERTY,System.getenv(MixAll.ROCKETMQ_HOME_ENV))&#xFF1B;&#x5176;&#x4E2D; ROCKETMQ_HOME_PROPERTY = &quot;rocketmq.home.dir&quot; ROCKETMQ_HOME_ENV = &quot;ROCKETMQ_HOME&quot; namesrvAddr&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; System.getProperty(MixAll.NAMESRV_ADDR_PROPERTY,System.getenv(MixAll.NAMESRV_ADDR_ENV))&#xFF1B;&#x5176;&#x4E2D; NAMESRV_ADDR_PROPERTY = &quot;rocketmq.namesrv.addr&quot; NAMESRV_ADDR_ENV = &quot;NAMESRV_ADDR&quot; brokerIP1&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; RemotingUtil.getLocalAddress()&#xFF1B;&#x53D6;&#x7F51;&#x5361;&#x6240;&#x6709;IPV4&#x5730;&#x5740;&#x4E0D;&#x4E3A; 127.0 &#x548C; 192.168 &#x5F00;&#x5934;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#xFF0C;IPV4&#x5730;&#x5740;&#x4E3A;&#x7A7A;&#x5219;&#x53D6;IPV6&#x7B2C;&#x4E00;&#x4E2A;&#x5730;&#x5740;&#xFF0C;&#x5426;&#x5219;&#x8FD4;&#x56DE; InetAddress.getLocalHost() brokerIP2&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; RemotingUtil.getLocalAddress()&#xFF1B;&#x540C; brokerIP1 brokerName&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; localHostName()&#xFF1B;&#x4E0D;&#x80FD;&#x83B7;&#x53D6; InetAddress.getLocalHost().getHostName() &#x65F6;&#x8FD4;&#x56DE;&#x56FA;&#x5B9A;&#x503C; DEFAULT_BROKER brokerClusterName&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;DefaultCluster&quot; brokerId&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; MixAll.MASTER_ID&#xFF1B;&#x5176;&#x4E2D; MASTER_ID = 0L brokerPermission&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; PermName.PERM_READ|PermName.PERM_WRITE defaultTopicQueueNums&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 8 autoCreateTopicEnable&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; true clusterTopicEnable&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; true brokerTopicEnable&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; true autoCreateSubscriptionGroup&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; true sendMessageThreadPoolNums&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 16 + Runtime.getRuntime().availableProcessors() * 4 pullMessageThreadPoolNums&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 16 + Runtime.getRuntime().availableProcessors() * 2 adminBrokerThreadPoolNums&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 16 clientManageThreadPoolNums&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 16 flushConsumerOffsetInterval&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 1000 * 5 flushConsumerOffsetHistoryInterval&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 1000 * 60 rejectTransactionMessage&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; false fetchNamesrvAddrByAddressServer&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; false sendThreadPoolQueueCapacity&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 100000 pullThreadPoolQueueCapacity&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 100000 filterServerNums&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 0 longPollingEnable&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; true shortPollingTimeMills&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 1000 notifyConsumerIdsChangedEnable&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; true highSpeedMode&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; false transferMsgByHeap&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; false ConfigManager &#x914D;&#x7F6E;&#x7BA1;&#x7406;&#x7684;&#x62BD;&#x8C61;&#x7C7B;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;3&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A;load&#xFF1A;&#x4ECE;&#x6587;&#x4EF6;&#x52A0;&#x8F7D;&#x6587;&#x4EF6;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x51FA;&#x9519;&#x65F6;&#x5C1D;&#x8BD5;&#x52A0;&#x8F7D; .bak &#x6587;&#x4EF6;&#x53CD;&#x5E8F;&#x5217;&#x5316;persist&#xFF1A;&#x540C;&#x6B65;&#x65B9;&#x6CD5;&#xFF0C;&#x5C06;&#x914D;&#x7F6E;&#x5E8F;&#x5217;&#x5316;&#x5230;&#x6587;&#x4EF6; DataVersion &#x57FA;&#x4E8E;&#x65F6;&#x95F4;&#x6233;&#x3001;&#x539F;&#x5B50;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x6570;&#x636E;&#x7248;&#x672C; MixAll &#x9884;&#x7F6E;&#x7684;&#x7CFB;&#x7EDF;&#x5E38;&#x91CF;&#x53CA;&#x4E00;&#x4E9B;&#x5E38;&#x7528;&#x65B9;&#x6CD5;&#xFF0C;&#x5E38;&#x91CF;&#x5217;&#x8868;&#xFF1A; ROCKETMQ_HOME_ENV&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;ROCKETMQ_HOME&quot; ROCKETMQ_HOME_PROPERTY&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;rocketmq.home.dir&quot; NAMESRV_ADDR_ENV&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;NAMESRV_ADDR&quot; NAMESRV_ADDR_PROPERTY&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;rocketmq.namesrv.addr&quot; MESSAGE_COMPRESS_LEVEL&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;rocketmq.message.compressLevel&quot; WS_DOMAIN_NAME&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; System.getProperty(&quot;rocketmq.namesrv.domain&quot;, &quot;jmenv.tbsite.net&quot;) WS_DOMAIN_SUBGROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; System.getProperty(&quot;rocketmq.namesrv.domain.subgroup&quot;, &quot;nsaddr&quot;) WS_ADDR&#xFF1A;&#x5F53;&#x542F;&#x52A8;Broker&#x65F6;&#xFF0C;&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;NameServer&#x4F1A;&#x4ECE;&#x8FD9;&#x4E2A;&#x5730;&#x5740;&#x81EA;&#x52A8;&#x83B7;&#x53D6;&#xFF0C;&#x56E0;&#x6B64;&#x9664;&#x4E86;Ali&#x81EA;&#x5DF1;&#x7528;&#xFF0C;&#x4E00;&#x822C;&#x90FD;&#x8981;&#x5728;Broker&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x914D;&#x7F6E;NameServer&#xFF0C;&#x5426;&#x5219;Broker&#x8D77;&#x6765;&#x4E86;&#x4E5F;&#x4E0D;&#x4F1A;&#x5982;&#x9884;&#x671F;&#x4E00;&#x6837;&#x5DE5;&#x4F5C;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; &quot;http://&quot; + WS_DOMAIN_NAME + &quot;:8080/rocketmq/&quot; + WS_DOMAIN_SUBGROUP DEFAULT_TOPIC&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;TBW102&quot; BENCHMARK_TOPIC&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;BenchmarkTest&quot; DEFAULT_PRODUCER_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;DEFAULT_PRODUCER&quot; DEFAULT_CONSUMER_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;DEFAULT_CONSUMER&quot; TOOLS_CONSUMER_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;TOOLS_CONSUMER&quot; FILTERSRV_CONSUMER_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;FILTERSRV_CONSUMER&quot; MONITOR_CONSUMER_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;__MONITOR_CONSUMER&quot; CLIENT_INNER_PRODUCER_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;CLIENT_INNER_PRODUCER&quot; SELF_TEST_PRODUCER_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;SELF_TEST_P_GROUP&quot; SELF_TEST_CONSUMER_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;SELF_TEST_C_GROUP&quot; SELF_TEST_TOPIC&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;SELF_TEST_TOPIC&quot; OFFSET_MOVED_EVENT&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;OFFSET_MOVED_EVENT&quot; ONS_HTTP_PROXY_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;CID_ONS-HTTP-PROXY&quot; CID_ONSAPI_PERMISSION_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;CID_ONSAPI_PERMISSION&quot; CID_ONSAPI_OWNER_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;CID_ONSAPI_OWNER&quot; CID_ONSAPI_PULL_GROUP&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;CID_ONSAPI_PULL&quot; CID_RMQ_SYS_PREFIX&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;CID_RMQ_SYS_&quot; LocalInetAddrs&#xFF1A;&#x83B7;&#x53D6;&#x6240;&#x6709;&#x7F51;&#x5361;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x672A;&#x4F7F;&#x7528; Localhost&#xFF1A;&#x672A;&#x4F7F;&#x7528;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; InetAddress.getLocalHost().getHostAddress() DEFAULT_CHARSET&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; &quot;UTF-8&quot; MASTER_ID&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 0L CURRENT_JVM_PID&#xFF1A;&#x901A;&#x8FC7; RuntimeMXBean &#x83B7;&#x53D6;&#x5F53;&#x524D;&#x8FDB;&#x7A0B;&#x7684;&#x8FDB;&#x7A0B;&#x53F7;&#xFF0C;&#x672A;&#x4F7F;&#x7528; RETRY_GROUP_TOPIC_PREFIX&#xFF1A;&#x91CD;&#x8BD5;Topic&#x7684;&#x524D;&#x7F00;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; &quot;%RETRY%&quot; DLQ_GROUP_TOPIC_PREFIX&#xFF1A;DLQ&#x662F; Dead Letter Queue &#x7684;&#x7F29;&#x5199;&#xFF0C;&#x6B7B;&#x4FE1;&#x961F;&#x5217;&#x7684;&#x524D;&#x7F00;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; &quot;%DLQ%&quot; SYSTEM_TOPIC_PREFIX&#xFF1A;&#x7CFB;&#x7EDF;Topic&#x7684;&#x524D;&#x7F00;&#xFF0C;&#x672A;&#x4F7F;&#x7528;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; &quot;rmq_sys_&quot; MQVersion &#x9884;&#x7F6E;&#x4E86;MQ&#x7684;&#x7814;&#x53D1;&#x7248;&#x672C;&#x53F7;&#xFF0C;&#x5F53;&#x524D;&#x7248;&#x672C;&#x53F7;&#x662F;&#xFF1A;Version.V3_4_6 Pair &#x5C06;2&#x4E2A;&#x5BF9;&#x8C61;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x5BF9;&#xFF0C;&#x672A;&#x4F7F;&#x7528; ServiceState &#x751F;&#x4EA7;&#x8005;&#x3001;&#x6D88;&#x8D39;&#x8005;&#x5904;&#x7406;&#x670D;&#x52A1;&#x7684;&#x8FD0;&#x884C;&#x72B6;&#x6001;&#x679A;&#x4E3E;&#x503C;&#xFF1A;CREATE_JUST&#xFF1A;&#x521A;&#x521B;&#x5EFA;&#x672A;&#x542F;&#x52A8;RUNNING&#xFF1A;&#x8FD0;&#x884C;&#x4E2D;SHUTDOWN_ALREADYSTART_FAILED ServiceThread &#x670D;&#x52A1;&#x7EBF;&#x7A0B;&#x7684;&#x62BD;&#x8C61;&#x7C7B;&#xFF0C;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x7ED3;&#x6784;&#xFF1A; thread&#xFF1A;&#x5185;&#x90E8;&#x5C01;&#x88C5;&#x8D77;&#x6765;&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;&#x7EBF;&#x7A0B;&#x540D;&#x4E3A;&#x5B9E;&#x73B0;&#x7C7B;&#x8FD4;&#x56DE;&#x7684;&#x670D;&#x52A1;&#x540D; JoinTime&#xFF1A;&#x670D;&#x52A1;&#x5728; shutdown &#x7684;&#x65F6;&#x5019;&#x7EBF;&#x7A0B;join&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; 90 * 1000 hasNotified&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; false stoped&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; false SystemClock &#x53EF;&#x4EE5;&#x6839;&#x636E;&#x6307;&#x5B9A;&#x7684; precision &#x81EA;&#x52A8;&#x66F4;&#x65B0;&#x7684;&#x65F6;&#x949F;JavaBean&#xFF0C;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x7ED3;&#x6784;&#xFF1A; precision&#xFF1A;&#x81EA;&#x52A8;&#x66F4;&#x65B0;&#x7684;&#x5468;&#x671F;&#x53CA;&#x4FEE;&#x6B63;&#x7CBE;&#x5EA6; now&#xFF1A;&#x5F53;&#x524D;&#x65F6;&#x949F;&#xFF0C;&#x66F4;&#x65B0;&#x65F6;&#x8BBE;&#x7F6E;&#x4E3A; System.currentTimeMillis() ThreadFactoryImpl ThreadFactory &#x5B9E;&#x73B0;&#x7C7B;JavaBean&#xFF0C;&#x6839;&#x636E; threadIndex &#x548C; threadNamePrefix &#x751F;&#x6210;&#x6307;&#x5B9A;&#x540D;&#x79F0;&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x7ED3;&#x6784;&#xFF1A; threadIndex&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; new AtomicLong(0) threadNamePrefix&#xFF1A; TopicConfig Topic&#x914D;&#x7F6E;&#x7684;JavaBean&#xFF0C;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x7ED3;&#x6784;&#xFF1A; DefaultReadQueueNums&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 16 DefaultWriteQueueNums&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 16 SEPARATOR&#xFF1A;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x5206;&#x9694;&#x7B26;&#xFF0C;&#x672A;&#x4F7F;&#x7528;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; &quot; &quot; topicName&#xFF1A;&#x9700;&#x8981;&#x8BBE;&#x7F6E; readQueueNums&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; DefaultReadQueueNums writeQueueNums&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; DefaultWriteQueueNums perm&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; PermName.PERM_READ|PermName.PERM_WRITE topicFilterType&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; TopicFilterType.SINGLE_TAG topicSysFlag&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; 0 order&#xFF1A;&#x9ED8;&#x8BA4;&#x503C; false TopicFilterType Topic &#x8FC7;&#x6EE4;&#x7C7B;&#x578B;&#x7684;&#x679A;&#x4E3E;&#x503C;&#xFF1A;SINGLE_TAGMULTI_TAG UtilAll &#x5DE5;&#x5177;&#x7C7B;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x65F6;&#x95F4;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x3001;byte[]&#x3001;&#x5806;&#x6808;&#x7B49;&#x5904;&#x7406;&#x548C;&#x8F6C;&#x6362;&#x7684;&#x65B9;&#x6CD5; BrokerConfig.rocketmqHome Broker&#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x52A0;&#x8F7D; brokerConfig.getRocketmqHome() + &quot;/conf/logback_broker.xml&quot; &#x8DEF;&#x5F84;&#x4E0B;&#x7684;&#x65E5;&#x5FD7;&#x914D;&#x7F6E; MixAll&#x4E2D;&#x7684;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x7B80;&#x4ECB;&#xFF1A; getRetryTopic&#xFF1A;&#x83B7;&#x53D6;&#x6307;&#x5B9A; consumerGroup &#x7684;&#x91CD;&#x8BD5;Topic &#x2013;&gt; RETRY_GROUP_TOPIC_PREFIX + consumerGroup isSysConsumerGroup&#xFF1A;&#x6307;&#x5B9A; consumerGroup &#x7684;&#x662F;&#x5426;&#x7CFB;&#x7EDF;&#x5185;&#x90E8;&#x6D88;&#x8D39;&#x8005;&#x7EC4; &#x2013;&gt; consumerGroup.startsWith(CID_RMQ_SYS_PREFIX) getDLQTopic&#xFF1A;&#x83B7;&#x53D6;&#x6307;&#x5B9A; consumerGroup &#x7684;&#x6B7B;&#x4FE1;&#x961F;&#x5217; &#x2013;&gt; DLQ_GROUP_TOPIC_PREFIX + consumerGroup brokerVIPChannel&#xFF1A;&#x8FD4;&#x56DE;&#x6307;&#x5B9A; brokerAddr &#x7AEF;&#x53E3;&#x53F7;&#x5C0F;2&#x7684;Broker&#x5730;&#x5740;&#xFF1B;&#x76F8;&#x5173;&#x7AEF;&#x53E3;&#x7684;&#x95EE;&#x9898;&#x540E;&#x7EED;&#x5728;Broker&#x7684;&#x89E3;&#x8BFB;&#x4E2D;&#x4F1A;&#x6709;&#x8FDB;&#x4E00;&#x6B65;&#x8BF4;&#x660E; getPID&#xFF1A;&#x901A;&#x8FC7; RuntimeMXBean &#x83B7;&#x53D6;&#x5F53;&#x524D;&#x8FDB;&#x7A0B;&#x7684;&#x8FDB;&#x7A0B;&#x53F7; string2File&#xFF1A;&#x4F7F;&#x7528; string2FileNotSafe&#xFF1A;&#x4F7F;&#x7528; &#x5C06;&#x6307;&#x5B9A; str &#x5199;&#x5165;&#x6307;&#x5B9A;&#x7684; fileName&#xFF1B;&#x5148;&#x5C06;&#x5185;&#x5BB9;&#x5199;&#x5165; fileName + &quot;.tmp&quot; &#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C; fileName &#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x5B58;&#x5728;&#xFF0C;&#x5C06;&#x539F;&#x6765;&#x7684;&#x5185;&#x5BB9;&#x5199;&#x5165; fileName + &quot;.bak&quot;&#xFF0C;&#x5220;&#x9664;&#x6587;&#x4EF6;&#x540E;&#xFF0C;&#x5C06; fileName + &quot;.tmp&quot; &#x91CD;&#x547D;&#x540D;&#x5230; fileName string2FileNotSafe&#xFF1A;&#x4F7F;&#x7528; FileWriter &#x5C06;&#x6307;&#x5B9A; str &#x5199;&#x5165;&#x6307;&#x5B9A;&#x7684; fileName file2String(java.lang.String)&#xFF1A;&#x4F7F;&#x7528; file2String(java.io.File) &#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x5185;&#x5BB9; file2String(java.net.URL)&#xFF1A;&#x4F7F;&#x7528; URLConnection.getInputStream() &#x83B7;&#x53D6;&#x8F93;&#x5165;&#x6D41;&#xFF0C;&#x6784;&#x9020; UTF-8 &#x7F16;&#x7801;&#x7684;&#x5B57;&#x7B26;&#x4E32; file2String(java.io.File)&#xFF1A;&#x4F7F;&#x7528; FileReader &#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#xFF0C;&#x672A;&#x4F7F;&#x7528;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x76F4;&#x63A5;&#x586B;&#x5145;char[]&#x540E;&#x8F6C;&#x6362;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5927;&#x6587;&#x4EF6;&#x614E;&#x7528; printObjectProperties(org.slf4j.Logger, java.lang.Object)&#xFF1A;&#x8C03;&#x7528; printObjectProperties(org.slf4j.Logger, java.lang.Object, boolean)&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x9ED8;&#x8BA4; false printObjectProperties(org.slf4j.Logger, java.lang.Object, boolean)&#xFF1A;&#x4F7F;&#x7528; Logger &#xFF08;&#x672A;&#x6307;&#x5B9A;&#x65F6;&#xFF0C;&#x8F93;&#x51FA;&#x5230;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#xFF09;&#x8F93;&#x51FA;&#x6307;&#x5B9A;&#x5BF9;&#x8C61;&#x7684;&#x58F0;&#x660E;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x63A7;&#x5236;&#x662F;&#x5426;&#x53EA;&#x8F93;&#x51FA;&#x5E26;&#x6709; com.alibaba.rocketmq.common.annotation.ImportantField &#x6CE8;&#x89E3;&#x7684;&#x5B57;&#x6BB5; properties2String&#xFF1A;&#x5C06; Properties &#x5BF9;&#x8C61;&#x8F6C;&#x6210;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6BCF;&#x884C;&#x4E00;&#x7EC4; key=value string2Properties&#xFF1A;&#x5C06;&#x5B57;&#x7B26;&#x4E32;&#x52A0;&#x8F7D;&#x8FDB; Properties &#x5BF9;&#x8C61; object2Properties&#xFF1A;&#x5C06;&#x6307;&#x5B9A;&#x5BF9;&#x8C61;&#x7684;&#x5B57;&#x6BB5;&#x548C;&#x503C;&#x52A0;&#x8F7D;&#x8FDB; Properties &#x5BF9;&#x8C61; properties2Object&#xFF1A;&#x904D;&#x5386;&#x6307;&#x5B9A;&#x5BF9;&#x8C61;&#x7684;&#x6240;&#x6709;set&#x65B9;&#x6CD5;&#xFF0C;&#x622A;&#x53D6;set&#x540E;&#x7684;&#x5269;&#x4F59;&#x5B57;&#x7B26;&#x4E32;&#x518D;&#x9996;&#x5B57;&#x6BCD;&#x5C0F;&#x5199;&#x4F5C;&#x4E3A;&#x5B57;&#x6BB5;&#x540D;&#xFF0C;&#x5982;&#x679C;&#x6307;&#x5B9A;&#x7684; Properties &#x5BF9;&#x8C61;&#x4E2D;&#x5B58;&#x5728;&#x8BE5;&#x5B57;&#x6BB5;&#xFF0C;&#x8C03;&#x7528;&#x8BE5;set&#x65B9;&#x6CD5;&#x8BBE;&#x7F6E; Properties &#x5BF9;&#x8C61;&#x5BF9;&#x5E94;&#x7684;&#x503C; isPropertiesEqual&#xFF1A;&#x901A;&#x8FC7; Properties#equals &#x5224;&#x65AD;&#x4E24;&#x4E2A; Properties &#x5BF9;&#x8C61;&#x662F;&#x5426;&#x76F8;&#x7B49; getLocalInetAddress&#xFF1A;&#x904D;&#x5386; NetworkInterface.getNetworkInterfaces() &#x4E2D;&#x7684;&#x6240;&#x6709;&#x5730;&#x5740; localhost&#xFF1A;InetAddress.getLocalHost().getHostAddress() compareAndIncreaseOnly&#xFF1A;&#x901A;&#x8FC7;&#x5FAA;&#x73AF;&#x548C;CAS&#xFF0C;&#x4FDD;&#x8BC1; AtomicLong &#x7684;&#x503C;&#x8BBE;&#x7F6E;&#x6210;&#x529F;&#xFF0C;&#x8BBE;&#x7F6E;&#x7684;&#x503C;&#x5FC5;&#x987B;&#x5927;&#x4E8E;&#x8BBE;&#x7F6E;&#x524D;&#x7684;&#x503C;&#x624D;&#x80FD;&#x8FD4;&#x56DE; true 2.2. common.adminrocketmq-tools &#x7BA1;&#x7406;&#x5DE5;&#x5177;&#x7528;&#x5230;&#x7684;&#x4E00;&#x4E9B;JavaBean class &#x8BF4;&#x660E; ConsumeStats &#x7BA1;&#x7406;&#x5DE5;&#x5177;&#x7528;&#x5230;&#x7684;&#x6D88;&#x8D39;&#x72B6;&#x6001; OffsetWrapper &#x7BA1;&#x7406;&#x5DE5;&#x5177;&#x7528;&#x5230;&#x7684;&#x504F;&#x79FB;&#x91CF;&#x5305;&#x88C5; RollbackStats &#x7BA1;&#x7406;&#x5DE5;&#x5177;&#x7528;&#x5230;&#x7684;&#x56DE;&#x6EDA;&#x72B6;&#x6001; TopicOffset &#x7BA1;&#x7406;&#x5DE5;&#x5177;&#x7528;&#x5230;&#x7684;Topic&#x504F;&#x79FB;&#x91CF; TopicStatsTable &#x7BA1;&#x7406;&#x5DE5;&#x5177;&#x7528;&#x5230;&#x7684;Topic&#x72B6;&#x6001;&#x8868; 2.3. common.annotation class &#x8BF4;&#x660E; ImportantField &#x7528;&#x6765;&#x6CE8;&#x89E3;&#x4E00;&#x4E9B;&#x914D;&#x7F6E;&#x4E2D;&#x7684;&#x91CD;&#x8981;&#x9879;&#xFF0C;&#x5728;&#x7EF4;&#x62A4;&#x5DE5;&#x5177;&#x4E2D;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x52A8;&#x6001;&#x8F93;&#x51FA;&#x8FD9;&#x4E9B;&#x5185;&#x5BB9; &#x6CE8;&#x89E3;&#x4F7F;&#x7528;&#x7684;&#x5730;&#x65B9;&#xFF1A; com.alibaba.rocketmq.common.BrokerConfig com.alibaba.rocketmq.filtersrv.FiltersrvConfig com.alibaba.rocketmq.store.config.MessageStoreConfig &#x6CE8;&#x89E3;&#x5224;&#x65AD;&#x7684;&#x5730;&#x65B9;&#xFF1A; com.alibaba.rocketmq.common.MixAll#printObjectProperties(org.slf4j.Logger, java.lang.Object, boolean) 2.4. common.conflict class &#x8BF4;&#x660E; PackageConflictDetect &#x7528;&#x4E8E; fastjson &#x7684;&#x7248;&#x672C;&#x51B2;&#x7A81;&#x68C0;&#x6D4B;&#xFF0C;&#x8981;&#x6C42;&#x6700;&#x4F4E;&#x7248;&#x672C;&#xFF1A;1.2.3 fastjson &#x7248;&#x672C;&#x51B2;&#x7A81;&#x68C0;&#x6D4B;&#x7684;&#x5730;&#x65B9;&#xFF1A; com.alibaba.rocketmq.broker.BrokerStartup com.alibaba.rocketmq.filtersrv.FiltersrvStartup com.alibaba.rocketmq.namesrv.NamesrvStartup com.alibaba.rocketmq.client.impl.factory.MQClientInstance com.alibaba.rocketmq.tools.command.MQAdminStartup 2.5. common.constant class &#x8BF4;&#x660E; DBMsgConstants &#x5B9A;&#x4E49;&#x4E86;&#x6700;&#x5927;&#x6D88;&#x606F;&#x5305;&#x4F53;&#x957F;&#x5EA6; maxBodySize &#x957F;&#x5EA6;&#x4E3A;&#xFF1A;64*1024*1204; //64KB LoggerName &#x5B9A;&#x4E49;&#x4E86;&#x5E38;&#x7528;&#x7684; slf4j &#x7684; Logger &#x540D;&#x5B57; PermName &#x4E3B;&#x8981;&#x5B9A;&#x4E49;&#x8BFB;&#x3001;&#x5199;&#x3001;&#x7EE7;&#x627F;&#x7684;&#x6743;&#x9650;&#x53CA;&#x6743;&#x9650;&#x8BC6;&#x522B;&#x65B9;&#x6CD5;&#xFF08;&#x4F4D;&#x8FD0;&#x7B97;&#xFF09; LoggerName &#x7684;&#x58F0;&#x660E;&#x5217;&#x8868;&#xFF1A;1234567891011121314public static final String FiltersrvLoggerName = &quot;RocketmqFiltersrv&quot;;public static final String NamesrvLoggerName = &quot;RocketmqNamesrv&quot;;public static final String BrokerLoggerName = &quot;RocketmqBroker&quot;;public static final String ClientLoggerName = &quot;RocketmqClient&quot;;public static final String ToolsLoggerName = &quot;RocketmqTools&quot;;public static final String CommonLoggerName = &quot;RocketmqCommon&quot;;public static final String StoreLoggerName = &quot;RocketmqStore&quot;;public static final String StoreErrorLoggerName = &quot;RocketmqStoreError&quot;;public static final String TransactionLoggerName = &quot;RocketmqTransaction&quot;;public static final String RebalanceLockLoggerName = &quot;RocketmqRebalanceLock&quot;;public static final String RocketmqStatsLoggerName = &quot;RocketmqStats&quot;;public static final String CommercialLoggerName = &quot;RocketmqCommercial&quot;;public static final String FlowControlLoggerName = &quot;RocketmqFlowControl&quot;;public static final String RocketmqAuthorizeLoggerName = &quot;RocketmqAuthorize&quot;; &#x9898;&#x5916;&#x8BDD;&#xFF1A;12345678910111213141516public static String perm2String(final int perm) { final StringBuffer sb = new StringBuffer(&quot;---&quot;); if (isReadable(perm)) { sb.replace(0, 1, &quot;R&quot;); } if (isWriteable(perm)) { sb.replace(1, 2, &quot;W&quot;); } if (isInherited(perm)) { sb.replace(2, 3, &quot;X&quot;); } return sb.toString();} &#x56E0;&#x4E3A;&#x4E0D;&#x662F;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#xFF0C;&#x8C03;&#x7528;&#x6B21;&#x6570;&#x4E5F;&#x4E0D;&#x591A;&#xFF0C;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x662F;&#x503E;&#x5411;&#x7528;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#xFF0C;&#x6709;&#x70B9;&#x5F3A;&#x8FEB;&#x75C7;&#x7684;&#x8D76;&#x811A;&#x554A;&#x3002;1234567public static String perm2String(final int perm) { final StringBuilder sb = new StringBuilder(3); sb.append(isReadable(perm)?&apos;R&apos;:&apos;-&apos;); sb.append(isWriteable(perm)?&apos;W&apos;:&apos;-&apos;); sb.append(isInherited(perm)?&apos;X&apos;:&apos;-&apos;); return sb.toString();} 2.6. common.consumer class &#x8BF4;&#x660E; ConsumeFromWhere &#x5B9A;&#x4E49;&#x4E86;&#x6D88;&#x8D39;&#x504F;&#x79FB;&#x91CF;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;&#x7684;&#x679A;&#x4E3E;&#x503C; &#x8FC7;&#x671F;&#x7684;&#x679A;&#x4E3E;&#x5DF2;&#x7ECF;&#x5168;&#x90E8;&#x88AB; CONSUME_FROM_LAST_OFFSET &#x66FF;&#x4EE3;123456789101112public enum ConsumeFromWhere { CONSUME_FROM_LAST_OFFSET, @Deprecated CONSUME_FROM_LAST_OFFSET_AND_FROM_MIN_WHEN_BOOT_FIRST, @Deprecated CONSUME_FROM_MIN_OFFSET, @Deprecated CONSUME_FROM_MAX_OFFSET, CONSUME_FROM_FIRST_OFFSET, CONSUME_FROM_TIMESTAMP,} 2.7. common.filter class &#x8BF4;&#x660E; FilterAPI &#x4E3B;&#x8981;&#x63D0;&#x4F9B;&#x4E86;2&#x4E2A; static &#x65B9;&#x6CD5;&#xFF1A;simpleClassName&#xFF1A;&#x622A;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x65B9;&#x5F0F;&#x5728;&#x5B8C;&#x6210;&#x7C7B;&#x540D;&#x4E2D;&#x83B7;&#x53D6;&#x7B80;&#x77ED;&#x7C7B;&#x540D;buildSubscriptionData&#xFF1A;&#x6839;&#x636E;consumerGroup&#x3001;topic&#x3001;subString&#x6784;&#x9020;&#x4E00;&#x4E2A; SubscriptionData FilterContext &#x4EC5;&#x5B58;&#x50A8; consumerGroup &#x7684;JavaBean&#xFF0C;&#x5728;&#x63A5;&#x53E3;&#x65B9;&#x6CD5; com.alibaba.rocketmq.common.filter.MessageFilter#match &#x4E2D;&#x4F7F;&#x7528; MessageFilter &#x4EC5;&#x58F0;&#x660E;&#x63A5;&#x53E3;&#x65B9;&#x6CD5; boolean match(final MessageExt msg, final FilterContext context); subString&#x4E2D;&#x5982;&#x679C;&#x5B58;&#x5728;&#x591A;&#x4E2A;tag&#xFF0C;&#x7531;&#x53CC;&#x7AD6;&#x7EBF;&#x5206;&#x9694;&#xFF1A;tag1 || tag2 || tag3 2.8. common.filter.impl class &#x8BF4;&#x660E; Op &#x4EC5;&#x5B58;&#x50A8; symbol &#x7684;&#x62BD;&#x8C61;&#x7C7B; Operand Op &#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x65E0;&#x7279;&#x6B8A;&#x5B9E;&#x73B0; Operator Op &#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x6269;&#x5C55;&#x4E86; priority &#x4F18;&#x5148;&#x7EA7;&#x3001;compareable &#x662F;&#x5426;&#x53EF;&#x6BD4;&#x8F83;2&#x4E2A;&#x5C5E;&#x6027;&#xFF1B;&#x5F53; compareable &#x4E3A; true &#x65F6;&#xFF0C;priority &#x503C;&#x5927;&#x8FD4;&#x56DE;1&#xFF0C;&#x76F8;&#x7B49;&#x8FD4;&#x56DE;0&#xFF0C;&#x5426;&#x5219;&#x8FD4;&#x56DE;-1&#xFF1B;&#x4E0D;&#x63D0;&#x4F9B;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#xFF0C;&#x4EC5;&#x901A;&#x8FC7; com.alibaba.rocketmq.common.filter.impl.Operator#createOperator &#x6839;&#x636E;&#x5165;&#x53C2;&#x5B57;&#x9762;&#x91CF;&#x8FD4;&#x56DE;&#x9884;&#x7F6E;&#x7684;4&#x79CD;&#x9759;&#x6001;&#x5E38;&#x91CF;&#xFF1A;LEFTPARENTHESISRIGHTPARENTHESISANDOR PolishExpr &#x9006;&#x6CE2;&#x5170;&#x8868;&#x8FBE;&#x5F0F;&#x8F93;&#x51FA;&#x3002;&#x672A;&#x4F7F;&#x7528; Type &#x7C7B;&#x578B;&#x679A;&#x4E3E;&#xFF0C;&#x7528;&#x4E8E; PolishExpr &#x89E3;&#x6790;&#x8868;&#x8FBE;&#x5F0F;&#xFF1A;NULLOPERANDOPERATORPARENTHESISSEPAERATOR Operator&#x9884;&#x7F6E;&#x9759;&#x6001;&#x5E38;&#x91CF;&#xFF1A;1234public static final Operator LEFTPARENTHESIS = new Operator(&quot;(&quot;, 30, false);public static final Operator RIGHTPARENTHESIS = new Operator(&quot;)&quot;, 30, false);public static final Operator AND = new Operator(&quot;&amp;&amp;&quot;, 20, true);public static final Operator OR = new Operator(&quot;||&quot;, 15, true); Reverse Polish Notation&#xFF1A;&#x9006;&#x6CE2;&#x5170;&#x8868;&#x793A;&#x6CD5; &#x9006;&#x6CE2;&#x5170;&#x8BB0;&#x6CD5;&#x4E2D;&#xFF0C;&#x64CD;&#x4F5C;&#x7B26;&#x7F6E;&#x4E8E;&#x64CD;&#x4F5C;&#x6570;&#x7684;&#x540E;&#x9762;&#x3002;&#x4F8B;&#x5982;&#x8868;&#x8FBE;&#x201C;&#x4E09;&#x52A0;&#x56DB;&#x201D;&#x65F6;&#xFF0C;&#x5199;&#x4F5C;&#x201C;3 4 +&#x201D;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x201C;3 + 4&#x201D;&#x3002;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x64CD;&#x4F5C;&#x7B26;&#xFF0C;&#x64CD;&#x4F5C;&#x7B26;&#x7F6E;&#x4E8E;&#x7B2C;&#x4E8C;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x7684;&#x540E;&#x9762;&#xFF0C;&#x6240;&#x4EE5;&#x5E38;&#x89C4;&#x4E2D;&#x7F00;&#x8BB0;&#x6CD5;&#x7684;&#x201C;3 - 4 + 5&#x201D;&#x5728;&#x9006;&#x6CE2;&#x5170;&#x8BB0;&#x6CD5;&#x4E2D;&#x5199;&#x4F5C;&#x201C;3 4 - 5 +&#x201D;&#xFF1A;&#x5148;3&#x51CF;&#x53BB;4&#xFF0C;&#x518D;&#x52A0;&#x4E0A;5&#x3002;&#x4F7F;&#x7528;&#x9006;&#x6CE2;&#x5170;&#x8BB0;&#x6CD5;&#x7684;&#x4E00;&#x4E2A;&#x597D;&#x5904;&#x662F;&#x4E0D;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x62EC;&#x53F7;&#x3002;&#x4F8B;&#x5982;&#x4E2D;&#x7F00;&#x8BB0;&#x6CD5;&#x4E2D;&#x201C;3 - 4 5&#x201D;&#x4E0E;&#x201C;&#xFF08;3 - 4&#xFF09;5&#x201D;&#x4E0D;&#x76F8;&#x540C;&#xFF0C;&#x4F46;&#x540E;&#x7F00;&#x8BB0;&#x6CD5;&#x4E2D;&#x524D;&#x8005;&#x5199;&#x505A;&#x201C;3 4 5 -&#x201D;&#xFF0C;&#x65E0;&#x6B67;&#x4E49;&#x5730;&#x8868;&#x793A;&#x201C;3 (4 5 ) &#x2212;&#x201D;&#xFF1B;&#x540E;&#x8005;&#x5199;&#x505A;&#x201C;3 4 - 5 *&#x201D;&#x3002; 2.9. common.help class &#x8BF4;&#x660E; FAQUrl &#x9884;&#x7F6E;&#x4E86;&#x4E00;&#x4E9B;&#x5178;&#x578B;&#x95EE;&#x9898;&#x94FE;&#x63A5;&#x3001;2&#x4E2A; static &#x65B9;&#x6CD5;&#x7528;&#x4E8E;&#x63D0;&#x793A;&#x89E3;&#x51B3;&#x65B9;&#x6848; &#x5178;&#x578B;&#x95EE;&#x9898;&#x5217;&#x8868;&#xFF1A; topic_not_exist namesrv_not_exist group_duplicate parameter_check_failed subGroup_not_exist service_not_ok topic_not_exist load_json_exception subscription_exception queue_not_exist unexpected_exception send_msg_failed unknown_host 2.10. common.hook class &#x8BF4;&#x660E; FilterCheckHook &#x5E94;&#x8BE5;&#x662F;&#x7528;&#x4F5C;&#x5BA2;&#x6237;&#x7AEF;Filter&#x68C0;&#x67E5;&#x7684;&#x94A9;&#x5B50;&#x3002;Class &#x2018;FilterCheckHook&#x2019; is never used 2.11. common.message class &#x8BF4;&#x660E; Message &#x6D88;&#x606F;&#x7684;JavaBean&#xFF0C;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x7ED3;&#x6784;&#x5305;&#x542B;4&#x4E2A;&#x90E8;&#x5206;&#xFF1A;topic&#xFF1A;&#x4E3B;&#x9898;&#x540D;flag&#xFF1A;&#x672A;&#x627E;&#x5230;&#x8BF4;&#x660E;properties&#xFF1A;Map &#x7ED3;&#x6784;&#x5B58;&#x50A8;&#x6D88;&#x606F;&#x5C5E;&#x6027;body&#xFF1A;byte[] &#x7ED3;&#x6784;&#x5B58;&#x50A8;&#x6D88;&#x606F;&#x5185;&#x5BB9;&#x5C01;&#x88C5;&#x4E86;&#x83B7;&#x53D6;&#x6D88;&#x606F;&#x5C5E;&#x6027;&#x3001;&#x5185;&#x5BB9;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x90E8;&#x5206;&#x6D88;&#x606F;&#x5C5E;&#x6027;&#x7684;&#x8BBE;&#x7F6E;&#x65B9;&#x6CD5;&#x6743;&#x9650;&#x4E3A; default &#x5728; MessageAccessor &#x4E2D;&#x63D0;&#x4F9B;&#x4E86; static &#x64CD;&#x4F5C;&#x65B9;&#x6CD5;&#xFF0C;&#x76F4;&#x63A5;&#x8BBE;&#x7F6E;&#x9884;&#x7F6E;&#x5C5E;&#x6027;&#x4F1A;&#x629B;&#x51FA;&#x5F02;&#x5E38; MessageAccessor &#x63D0;&#x4F9B;&#x4E86; Message &#x5C5E;&#x6027;&#x7684; static &#x64CD;&#x4F5C;&#x65B9;&#x6CD5; MessageConst Message &#x4E2D;&#x7528;&#x5230;&#x7684;&#x5C5E;&#x6027;&#x9759;&#x6001;&#x5E38;&#x91CF;&#x53CA;&#x8FD9;&#x4E9B;&#x5E38;&#x91CF;&#x96C6; systemKeySet MessageDecoder &#x63D0;&#x4F9B;&#x4E86; MessageId &#x751F;&#x6210;&#x548C;&#x89E3;&#x6790;&#x65B9;&#x6CD5;&#x3001;MessageExt &#x53CA;&#x6D88;&#x606F;&#x5C5E;&#x6027;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x548C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x65B9;&#x6CD5; MessageExt Message &#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x6269;&#x5C55;&#x4E86;queueId&#x3001;storeSize&#x3001;queueOffset&#x3001;sysFlag&#x3001;bornTimestamp&#x3001;storeTimestamp&#x7B49;&#x7B49; MessageId &#x6D88;&#x606F;ID&#x7684;JavaBean&#xFF0C;16&#x5B57;&#x8282;&#x3002;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x7ED3;&#x6784;&#x5305;&#x542B;2&#x4E2A;&#x90E8;&#x5206;&#xFF1A;address&#xFF1A;SocketAddress&#x7C7B;&#x578B;&#x7684;broker&#x76D1;&#x542C;&#x5730;&#x5740;offset&#xFF1A;long&#x7C7B;&#x578B;&#x7684;&#x504F;&#x79FB;&#x91CF; MessageQueue &#x6D88;&#x606F;&#x961F;&#x5217;&#x7684;JavaBean&#xFF0C;&#x5185;&#x5B58;&#x7ED3;&#x6784;&#x5305;&#x542B;3&#x4E2A;&#x90E8;&#x5206;&#xFF1A;topicbrokerNamequeueId&#x91CD;&#x5199;&#x4E86; hashcode &#x548C; equals &#x65B9;&#x6CD5;&#xFF0C;&#x5B9E;&#x73B0;&#x4E86; Comparable &#x63A5;&#x53E3; MessageQueueForC &#x589E;&#x52A0;&#x4E86;offset&#x7684; MessageQueue&#xFF0C;com.alibaba.rocketmq.broker.client.net.Broker2Client#convertOffsetTable2OffsetList &#x4E2D;&#x751F;&#x6210;&#x5BF9;&#x8C61; 2.12. common.namesrv class &#x8BF4;&#x660E; NamesrvConfig NameServer&#x7684;&#x914D;&#x7F6E;&#x7C7B;JavaBean&#xFF0C;&#x5185;&#x5B58;&#x7ED3;&#x6784;&#x5305;&#x542B;4&#x4E2A;&#x90E8;&#x5206;&#xFF1A;rocketmqHome&#xFF1A;&#x5148;&#x53D6;JVM&#x53D8;&#x91CF;rocketmq.home.dir&#xFF0C;&#x672A;&#x8BBE;&#x7F6E;&#x65F6;&#x53D6;&#x7CFB;&#x7EDF;&#x73AF;&#x5883;&#x53D8;&#x91CF;ROCKETMQ_HOMEkvConfigPath&#xFF1A;&#x7528;&#x6237;&#x76EE;&#x5F55;&#x4E0B;/namesrv/kvConfig.jsonproductEnvName&#xFF1A;&#x9ED8;&#x8BA4;&#x201D;center&#x201D;clusterTest&#xFF1A;&#x9ED8;&#x8BA4;false NamesrvUtil &#x5B9A;&#x4E49;&#x5E38;&#x91CF; public static final String NAMESPACE_ORDER_TOPIC_CONFIG = &quot;ORDER_TOPIC_CONFIG&quot;; RegisterBrokerResult Broker&#x6CE8;&#x518C;&#x7ED3;&#x679C;&#x7684;JavaBean&#xFF0C;&#x5185;&#x5B58;&#x7ED3;&#x6784;&#x5305;&#x542B;3&#x4E2A;&#x90E8;&#x5206;&#xFF1A;haServerAddr&#xFF1A;masterAddr&#xFF1A;&#x4E3B;&#x8282;&#x70B9;&#x5730;&#x5740;kvTable&#xFF1A;KVTable&#x7C7B;&#x578B;&#x7684;&#x5176;&#x4ED6;&#x503C; TopAddressing &#x67E5;&#x8BE2;NameServer&#x4FE1;&#x606F;&#x7684;&#x914D;&#x7F6E;&#x7C7B;JavaBean&#xFF0C;&#x5185;&#x5B58;&#x7ED3;&#x6784;&#x5305;&#x542B;3&#x4E2A;&#x90E8;&#x5206;&#xFF1A;nsAddrwsAddrunitName&#xFF1A;&#x4E0D;&#x4E3A;&#x7A7A;&#x65F6;&#xFF0C;&#x5728; wsAddr &#x540E;&#x8FFD;&#x52A0; -${unitName}?nofix=1&#x63D0;&#x4F9B;&#x4E86; #fetchNSAddr() &#x65B9;&#x6CD5;&#x4ECE; wsAddr &#x548C; unitName &#x7EC4;&#x6210;&#x7684;url&#x67E5;&#x8BE2;&#x6700;&#x65B0;&#x7684;NameServer&#x5730;&#x5740; wsAddr &#x503C;&#x53C2;&#x89C1;&#xFF1A;MixAll.WS_ADDR 2.13. common.protocol class &#x8BF4;&#x660E; RequestCode &#x8BF7;&#x6C42;&#x7801; ResponseCode &#x5E94;&#x7B54;&#x7801; 2.14. common.protocol.body class &#x8BF4;&#x660E; CMResult &#x6D88;&#x8D39;&#x7ED3;&#x679C;&#x679A;&#x4E3E;&#x503C;&#xFF1A;CR_SUCCESSCR_LATERCR_ROLLBACKCR_COMMITCR_THROW_EXCEPTIONCR_RETURN_NULL 2.15. common.protocol.heartbeat class &#x8BF4;&#x660E; ConsumeType &#x6D88;&#x8D39;&#x7C7B;&#x578B;&#x679A;&#x4E3E;&#x503C;&#xFF1A;CONSUME_ACTIVELY&#xFF1A;&#x4E3B;&#x52A8;&#x578B;CONSUME_PASSIVELY&#xFF1A;&#x88AB;&#x52A8;&#x578B; MessageModel &#x6D88;&#x606F;&#x6A21;&#x5F0F;&#x679A;&#x4E3E;&#x503C;&#xFF1A;BROADCASTING&#xFF1A;&#x5E7F;&#x64AD;&#xFF0C;&#x6BCF;&#x4E2A;&#x6D88;&#x8D39;&#x8005;&#x62E5;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x961F;&#x5217;CLUSTERING&#xFF1A;&#x96C6;&#x7FA4;&#xFF0C;&#x540C;&#x96C6;&#x7FA4;&#x4E2D;&#x7684;&#x6D88;&#x8D39;&#x8005;&#x4F5C;&#x4E3A;&#x4E00;&#x7EC4;&#x4ECE;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#x6D88;&#x8D39; 2.16. common.protocol.topic class &#x8BF4;&#x660E; RequestCode &#x5B9A;&#x4E49;&#x4E86;&#x8BF7;&#x6C42;&#x6D88;&#x606F;&#x5E38;&#x91CF; ResponseCode &#x5B9A;&#x4E49;&#x4E86;&#x5E94;&#x7B54;&#x6D88;&#x606F;&#x5E38;&#x91CF; &#x5305;&#x4E0B;&#x5176;&#x4ED6;&#x7C7B;&#xFF0C;&#x591A;&#x4E3A;JavaBean&#xFF0C;&#x4E0D;&#x505A;&#x8D58;&#x8FF0; 2.17. common.running class &#x8BF4;&#x660E; RunningStats &#x8FD0;&#x884C;&#x72B6;&#x6001;&#x679A;&#x4E3E;&#x503C;&#xFF1A;commitLogMaxOffsetcommitLogMinOffsetcommitLogDiskRatioconsumeQueueDiskRatioscheduleMessageOffset 2.18. common.stats class &#x8BF4;&#x660E; StatsItem &#x63D0;&#x4F9B;&#x4E86;&#x751F;&#x6210;&#x72B6;&#x6001;&#x5FEB;&#x7167; StatsSnapshot &#x7684;&#x65B9;&#x6CD5; StatsSnapshot &#x72B6;&#x6001;&#x5FEB;&#x7167;JavaBean 2.19. common.subscription class &#x8BF4;&#x660E; SubscriptionGroupConfig &#x8BA2;&#x9605;&#x7EC4;&#x914D;&#x7F6E;JavaBean&#xFF0C;&#x5185;&#x5B58;&#x7ED3;&#x6784;&#x5305;&#x542B;8&#x4E2A;&#x90E8;&#x5206;&#xFF1A;groupName&#xFF1A;&#x7EC4;&#x540D;&#xFF0C;&#x9700;&#x8981;&#x8BBE;&#x7F6E;consumeEnable&#xFF1A;&#x662F;&#x5426;&#x5141;&#x8BB8;&#x6D88;&#x8D39;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; trueconsumeFromMinEnable&#xFF1A;&#x672A;&#x4F7F;&#x7528;consumeBroadcastEnable&#xFF1A;&#x662F;&#x5426;&#x5F00;&#x542F;&#x5E7F;&#x64AD;&#x6A21;&#x5F0F;&#x6D88;&#x8D39;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; trueretryQueueNums&#xFF1A;&#x6700;&#x5927;Topic&#x961F;&#x5217;&#x6570;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; 1retryMaxTimes&#xFF1A;&#x91CD;&#x8BD5;&#x6700;&#x5927;&#x6B21;&#x6570;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; 16brokerId&#xFF1A;&#x5F53;&#x524D;Broker&#x7684;id&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; MixAll.MASTER_ID=0whichBrokerWhenConsumeSlowly&#xFF1A;&#x5F53;&#x6709;&#x6162;&#x6D88;&#x8D39;&#x65F6;&#x63A8;&#x8350;&#x7684;Broker&#x7684;id&#xFF0C;&#x9ED8;&#x8BA4;&#x503C; 1 2.20. common.sysflag class &#x8BF4;&#x660E; MessageSysFlag &#x4F4D;&#x8FD0;&#x7B97;&#x63D0;&#x4F9B;&#x6D88;&#x606F;&#x7684;&#x538B;&#x7F29;&#x3001;&#x591A;Tag&#x3001;&#x4E8B;&#x52A1;&#x7C7B;&#x578B;&#x7B49;&#x6807;&#x8BB0;&#x7684;&#x5224;&#x65AD; PullSysFlag &#x4F4D;&#x8FD0;&#x7B97;&#x63D0;&#x4F9B;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x7684;&#x786E;&#x8BA4;&#x504F;&#x79FB;&#x91CF;&#x3001;&#x963B;&#x585E;&#x3001;&#x8BA2;&#x9605;&#x3001;&#x8FC7;&#x6EE4;&#x7B49;&#x6807;&#x8BB0;&#x7684;&#x5224;&#x65AD; TopicSysFlag &#x4F4D;&#x8FD0;&#x7B97;&#x63D0;&#x4F9B;&#x4E3B;&#x9898;&#x6807;&#x8BB0;&#x7684;&#x5224;&#x65AD; 2.21. common.utils class &#x8BF4;&#x660E; ChannelUtil &#x4EC5;&#x63D0;&#x4F9B;&#x83B7;&#x53D6;&#x8FDC;&#x7AEF;IP&#x7684; static &#x65B9;&#x6CD5; HttpTinyClient &#x63D0;&#x4F9B;&#x4E86; java.net.HttpURLConnection &#x5C01;&#x88C5;&#x7684;&#xFF0C;httpGet&#x3001;httpPost&#x65B9;&#x6CD5; IOTinyUtils &#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;IO&#x64CD;&#x4F5C;&#x4F9B; HttpTinyClient &#x4F7F;&#x7528; 3. &#x5176;&#x4ED6;&#x901A;&#x8FC7;&#x641C;&#x7D22;&#xFF0C;&#x53D1;&#x73B0;&#x4E86; rocketmq-common &#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x4E00;&#x4E9B;&#x73AF;&#x5883;&#x53D8;&#x91CF; &#x6E90;&#x6587;&#x4EF6;&#xFF1A;BrokerConfig rocketmq.home.dir &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x73AF;&#x5883;&#x53D8;&#x91CF; ROCKETMQ_HOME &#x8BBE;&#x7F6E;Broker&#x7684;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#xFF0C;&#x76EE;&#x524D;&#x7528;&#x6765;&#x5B9A;&#x4F4D; /conf/logback_broker.xml &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x548C;&#x5B9A;&#x4F4D;&#x6587;&#x4EF6; %s/bin/startfsrv.sh rocketmq.namesrv.addr &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x73AF;&#x5883;&#x53D8;&#x91CF; NAMESRV_ADDR &#x8BBE;&#x7F6E;NameServer&#x7684;&#x5730;&#x5740; &#x6E90;&#x6587;&#x4EF6;&#xFF1A;MixAll rocketmq.namesrv.domain &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; jmenv.tbsite.net &#x6307;&#x5B9A;&#x5728;&#x7EBF;NameServer&#x67E5;&#x8BE2;&#x670D;&#x52A1;&#x7684;&#x57DF;&#x540D; rocketmq.namesrv.domain.subgroup &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; nsaddr &#x6307;&#x5B9A;&#x5728;&#x7EBF;NameServer&#x67E5;&#x8BE2;&#x670D;&#x52A1;&#x7684;URL&#x540E;&#x7F00; &#x6E90;&#x6587;&#x4EF6;&#xFF1A;PackageConflictDetect com.alibaba.rocketmq.packageConflictDetect.enable &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; true &#x662F;&#x5426;&#x8FDB;&#x884C;&#x5305;&#x51B2;&#x7A81;&#x68C0;&#x6D4B;&#xFF0C;&#x8FD9;&#x91CC;&#x4EC5;&#x68C0;&#x6D4B;fastjson&#x5FC5;&#x987B;&#x5927;&#x4E8E; 1.2.3 &#x7248;&#x672C; &#x6E90;&#x6587;&#x4EF6;&#xFF1A;NamesrvConfig rocketmq.home.dir &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x73AF;&#x5883;&#x53D8;&#x91CF; ROCKETMQ_HOME &#x8BBE;&#x7F6E;NameServer&#x7684;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#xFF0C;&#x76EE;&#x524D;&#x7528;&#x6765;&#x5B9A;&#x4F4D; /conf/logback_namesrv.xml &#x914D;&#x7F6E;&#x6587;&#x4EF6;","tags":[{"name":"rocketmq","slug":"rocketmq","permalink":"http://hiant.github.io/tags/rocketmq/"},{"name":"rocketmq-common","slug":"rocketmq-common","permalink":"http://hiant.github.io/tags/rocketmq-common/"}]},{"title":"RocketMQ系列0x2——rocketmq-remoting","date":"2016-08-16T07:16:35.000Z","path":"2016/08/16/rocketmq-0x2/","text":"1. Maven&#x4F9D;&#x8D56;&#x56FE;&#x4F7F;&#x7528; IDEA &#x53EF;&#x4EE5;&#x770B;&#x5230; compile &#x7EA7;&#x522B;&#x7684;&#x4F9D;&#x8D56;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; &#x4F9D;&#x8D56; &#x5B98;&#x7F51; &#x7B80;&#x4ECB; fastjson https://github.com/alibaba/fastjson Fastjson &#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x5C06;Java&#x5BF9;&#x8C61;&#x5E8F;&#x5217;&#x5316;&#x6210;JSON&#x683C;&#x5F0F;&#xFF0C;&#x6216;&#x8005;&#x5C06;JSON&#x683C;&#x5F0F;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x4E3A;Java&#x5BF9;&#x8C61;&#x7684;Java&#x5E93;&#x3002; netty-all http://netty.io Netty&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x7684;&#x3001;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x7684;&#x7F51;&#x7EDC;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6846;&#x67B6;&#x548C;&#x5DE5;&#x5177;&#xFF0C;&#x7528;&#x4EE5;&#x5FEB;&#x901F;&#x5F00;&#x53D1;&#x9AD8;&#x6027;&#x80FD;&#x3001;&#x9AD8;&#x53EF;&#x9760;&#x6027;&#x7684;&#x7F51;&#x7EDC;&#x670D;&#x52A1;&#x5668;&#x548C;&#x5BA2;&#x6237;&#x7AEF;&#x7A0B;&#x5E8F; slf4j-api http://www.slf4j.org Simple Logging Facade for Java 2. &#x89E3;&#x8BFB;&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;Maven&#x4F9D;&#x8D56;&#x56FE;&#xFF0C;&#x4EE5;&#x53CA;&#x4F9D;&#x8D56;&#x5305;&#x7684;&#x4ECB;&#x7ECD;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5927;&#x80C6;&#x5047;&#x8BBE;&#xFF1A; 1. &#x57FA;&#x4E8E; netty &#x5F00;&#x53D1;&#x7684;&#x670D;&#x52A1;&#x7AEF;&#x548C;&#x5BA2;&#x6237;&#x7AEF; 2. &#x670D;&#x52A1;&#x7AEF;&#x548C;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x4F20;&#x8F93;&#x62A5;&#x6587;&#x4F7F;&#x7528;&#x4E86; fastjson &#x5904;&#x7406;&#x3002; 3. &#x9A8C;&#x8BC1; &#x6211;&#x4EEC;&#x4ECE; wiki\\sdk_develop_guide.md &#x4E2D;&#x627E;&#x5230;&#x4E86;&#x670D;&#x52A1;&#x7AEF;&#x548C;&#x5BA2;&#x6237;&#x7AEF;&#x5173;&#x4E8E;&#x901A;&#x4FE1;&#x534F;&#x8BAE;&#x7684;&#x7EA6;&#x5B9A; &#x534F;&#x8BAE;&#x683C;&#x5F0F; &lt;length&gt; &lt;header length&gt; &lt;header data&gt; &lt;body data&gt; 1 2 3 4 &#x534F;&#x8BAE;&#x5206;4&#x90E8;&#x5206;&#xFF0C;&#x542B;&#x4E49;&#x5206;&#x522B;&#x5982;&#x4E0B; &#x5927;&#x7AEF;4&#x4E2A;&#x5B57;&#x8282;&#x6574;&#x6570;&#xFF0C;&#x7B49;&#x4E8E;2&#x3001;3&#x3001;4&#x957F;&#x5EA6;&#x603B;&#x548C; &#x5927;&#x7AEF;4&#x4E2A;&#x5B57;&#x8282;&#x6574;&#x6570;&#xFF0C;&#x7B49;&#x4E8E;3&#x7684;&#x957F;&#x5EA6; &#x4F7F;&#x7528;json&#x5E8F;&#x5217;&#x5316;&#x6570;&#x636E; &#x5E94;&#x7528;&#x81EA;&#x5B9A;&#x4E49;&#x4E8C;&#x8FDB;&#x5236;&#x5E8F;&#x5217;&#x5316;&#x6570;&#x636E; &#x7B2C;&#x4E09;&#x90E8;&#x5206;&#xFF0C;Header&#x683C;&#x5F0F; 123456789101112{ &quot;code&quot;: 0, &quot;language&quot;: &quot;JAVA&quot;, &quot;version&quot;: 0, &quot;opaque&quot;: 0, &quot;flag&quot;: 1, &quot;remark&quot;: &quot;hello, I am respponse /127.0.0.1:27603&quot;, &quot;extFields&quot;: { &quot;count&quot;: &quot;0&quot;, &quot;messageTitle&quot;: &quot;HelloMessageTitle&quot; }} &#x8FD9;&#x91CC;&#x5DF2;&#x7ECF;&#x8BF4;&#x660E;&#x4E86;&#xFF0C;&#x5185;&#x5BB9;&#x662F; json &#xFF0C;&#x90A3;&#x4E48;&#x6709;&#x5173;&#x8FD9;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x5FC5;&#x7136;&#x4F1A;&#x4F7F;&#x7528; fastjson com.alibaba.rocketmq.remoting.netty.NettyDecoder &#x7EE7;&#x627F;&#x81EA;&#xFF1A;io.netty.handler.codec.LengthFieldBasedFrameDecoder &#x4ECE;&#x7C7B;&#x540D;&#x4E0A;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6765;&#xFF0C;&#x7528;&#x6765;&#x505A;&#x89E3;&#x5305;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x628A;&#x4E0A;&#x8FF0;&#x534F;&#x8BAE;&#x4E2D;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x636E;&#xFF0C;&#x6309;&#x7167;(1)&#x90E8;&#x5206;&#x7684;length&#xFF0C;&#x6765;&#x8BFB;&#x53D6;&#x540E;3&#x90E8;&#x5206; &#x91CD;&#x5199;&#x4E86; public Object decode(ChannelHandlerContext ctx, ByteBuf in) throws Exception &#x65B9;&#x6CD5;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x89E3;&#x5305;&#x5B8C;&#x6210;&#x540E;&#x5C06;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x636E;&#x901A;&#x8FC7; RemotingCommand.decode(byteBuffer) &#x53CD;&#x5E8F;&#x5217;&#x5316;&#x6210;&#x4E00;&#x4E2A; com.alibaba.rocketmq.remoting.protocol.RemotingCommand &#x5BF9;&#x8C61; com.alibaba.rocketmq.remoting.netty.NettyEncoder &#x7EE7;&#x627F;&#x81EA;&#xFF1A;io.netty.handler.codec.MessageToByteEncoder &#x4ECE;&#x7C7B;&#x540D;&#x4E0A;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6765;&#xFF0C;&#x7528;&#x6765;&#x505A;&#x5C01;&#x5305;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x628A;&#x4E00;&#x4E2A; com.alibaba.rocketmq.remoting.protocol.RemotingCommand &#x5BF9;&#x8C61;&#x5E8F;&#x5217;&#x5316;&#x6210;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x636E; &#x91CD;&#x5199;&#x4E86; public void encode(ChannelHandlerContext ctx, RemotingCommand remotingCommand, ByteBuf out) throws Exception &#x65B9;&#x6CD5;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x8C03;&#x7528; remotingCommand.encodeHeader() &#x5E8F;&#x5217;&#x5316;&#x5305;&#x5934;&#x3001;remotingCommand.getBody() &#x5E8F;&#x5217;&#x5316;&#x5305;&#x4F53;&#xFF0C;&#x5E76;&#x5C06;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x7ED3;&#x679C;&#x5199;&#x5165;&#x5230; netty &#x7684;&#x5199;&#x7F13;&#x51B2;&#x91CC; 4. &#x5176;&#x4ED6;&#x901A;&#x8FC7;&#x641C;&#x7D22;&#xFF0C;&#x53D1;&#x73B0;&#x4E86; rocketmq-remoting &#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x4E00;&#x4E9B;&#x73AF;&#x5883;&#x53D8;&#x91CF; &#x6E90;&#x6587;&#x4EF6;&#xFF1A;NettyDecoder com.rocketmq.remoting.frameMaxLength &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; 8388608 &#x4E00;&#x4E2A;&#x534F;&#x8BAE;&#x5305;&#x7684;&#x6700;&#x5927;&#x957F;&#x5EA6; com.rocketmq.remoting.nettyPooledByteBufAllocatorEnable &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; false &#x662F;&#x5426;&#x4F7F;&#x7528;netty&#x7684;ByteBuf&#x5206;&#x914D;&#x6C60; &#x6E90;&#x6587;&#x4EF6;&#xFF1A;NettySystemConfig com.rocketmq.remoting.socket.sndbuf.size &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; 65535 &#x8BBE;&#x7F6E;netty&#x7684;ChannelOption.SO_SNDBUF&#x3002;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF1A;Broker&#x4E2D;&#x5982;&#x679C;&#x672A;&#x8BBE;&#x7F6E;&#xFF0C;com.alibaba.rocketmq.remoting.netty.NettySystemConfig#SocketSndbufSize = 131072NameServer&#x4E2D;&#x5982;&#x679C;&#x672A;&#x8BBE;&#x7F6E;&#xFF0C;com.alibaba.rocketmq.remoting.netty.NettySystemConfig#SocketSndbufSize = 2048FilterServer&#x4E2D;&#x5982;&#x679C;&#x672A;&#x8BBE;&#x7F6E;&#xFF0C;com.alibaba.rocketmq.remoting.netty.NettySystemConfig#SocketSndbufSize = 65535 com.rocketmq.remoting.socket.rcvbuf.size &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; 65535 &#x8BBE;&#x7F6E;netty&#x7684;ChannelOption.SO_RCVBUF&#x3002;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF1A;Broker&#x4E2D;&#x5982;&#x679C;&#x672A;&#x8BBE;&#x7F6E;&#xFF0C;com.alibaba.rocketmq.remoting.netty.NettySystemConfig#SocketSndbufSize = 131072NameServer&#x4E2D;&#x5982;&#x679C;&#x672A;&#x8BBE;&#x7F6E;&#xFF0C;com.alibaba.rocketmq.remoting.netty.NettySystemConfig#SocketSndbufSize = 1024FilterServer&#x4E2D;&#x5982;&#x679C;&#x672A;&#x8BBE;&#x7F6E;&#xFF0C;com.alibaba.rocketmq.remoting.netty.NettySystemConfig#SocketSndbufSize = 1024 com.rocketmq.remoting.clientAsyncSemaphoreValue &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; 2048 CommunicationMode.ASYNC &#x6D88;&#x606F;&#x7684;&#x5E76;&#x53D1;&#x6570; com.rocketmq.remoting.clientOnewaySemaphoreValue &#x9ED8;&#x8BA4;&#x503C; &#x7528;&#x9014; 2048 CommunicationMode.ONEWAY &#x6D88;&#x606F;&#x7684;&#x5E76;&#x53D1;&#x6570;","tags":[{"name":"rocketmq","slug":"rocketmq","permalink":"http://hiant.github.io/tags/rocketmq/"},{"name":"rocketmq-remoting","slug":"rocketmq-remoting","permalink":"http://hiant.github.io/tags/rocketmq-remoting/"}]},{"title":"RocketMQ系列0x1——源码结构","date":"2016-08-12T07:16:43.000Z","path":"2016/08/12/rocketmq-0x1/","text":"1. &#x6E90;&#x7801;&#x5BFC;&#x5165;&#x4ECE; https://github.com/alibaba/RocketMQ &#x68C0;&#x51FA;&#x6E90;&#x7801;&#xFF0C;&#x5BFC;&#x5165;&#x5230; IDEA &#x6216;&#x8005; Eclipse &#x4E2D;&#x3002; IDEA &#x7684;&#x5BFC;&#x5165;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF08;&#x7701;&#x7565;&#x4E86;&#x90E8;&#x5206;&#x6587;&#x4EF6;&#xFF09;&#xFF1A; 2. &#x4E3B;&#x8981;&#x76EE;&#x5F55;&#x4ECB;&#x7ECD; &#x76EE;&#x5F55; &#x8BF4;&#x660E; rocketmq-broker &#x5BF9;consumer&#x548C;producer&#x6765;&#x8BF4;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x63A5;&#x6536;producer&#x53D1;&#x6765;&#x7684;&#x6D88;&#x606F;&#x5E76;&#x5B58;&#x50A8;&#xFF0C;&#x540C;&#x65F6;consumer&#x6765;&#x8FD9;&#x91CC;&#x62C9;&#x53D6;&#x6D88;&#x606F;&#x3002; rocketmq-client &#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x5305;&#x542B;producer&#x7AEF;&#x548C;consumer&#x7AEF;&#xFF0C;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x548C;&#x63A5;&#x6536;&#x6D88;&#x606F;&#x7684;&#x8FC7;&#x7A0B;&#x3002; rocketmq-common &#x901A;&#x7528;&#x7684;&#x5E38;&#x91CF;&#x679A;&#x4E3E;&#x3001;&#x57FA;&#x7C7B;&#x65B9;&#x6CD5;&#x6216;&#x8005;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6309;&#x63CF;&#x8FF0;&#x7684;&#x76EE;&#x6807;&#x6765;&#x5206;&#x5305;&#x901A;&#x4FD7;&#x6613;&#x61C2;&#x3002;&#x5305;&#x540D;&#x6709;&#xFF1A;admin&#xFF0C;consumer&#xFF0C;filter&#xFF0C;hook&#xFF0C;message&#x7B49;&#x3002; rocketmq-filtersrv &#x6D88;&#x606F;&#x8FC7;&#x6EE4;&#x5668;server&#xFF0C;&#x73B0;&#x5728;rocketmq&#x7684;wiki&#x4E0A;&#x6709;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x53CA;&#x8BF4;&#x660E;&#x3002;&#x540C;&#x6837;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x9605;&#x8BFB;&#x6E90;&#x7801;&#x76EE;&#x5F55;&#x4E0B;&#x7684; wiki\\filter_server_guide.md rocketmq-namesrv NameServer&#xFF0C;&#x7C7B;&#x4F3C;SOA&#x670D;&#x52A1;&#x7684;&#x6CE8;&#x518C;&#x4E2D;&#x5FC3;&#xFF0C;&#x8FD9;&#x91CC;&#x4FDD;&#x5B58;&#x7740;&#x6D88;&#x606F;&#x7684;TopicName&#xFF0C;&#x961F;&#x5217;&#x7B49;&#x8FD0;&#x884C;&#x65F6;&#x7684;meta&#x4FE1;&#x606F;&#x3002; rocketmq-remoting &#x7528;Netty4&#x5199;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;fastjson&#x505A;&#x7684;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x4E8C;&#x8FDB;&#x5236;&#x534F;&#x8BAE;&#x3002; rocketmq-srvutil &#x53EA;&#x6709;&#x4E00;&#x4E2A;ServerUtil&#x7C7B;&#xFF0C;&#x7C7B;&#x6CE8;&#x89E3;&#x662F;&#xFF0C;&#x53EA;&#x63D0;&#x4F9B;Server&#x7A0B;&#x5E8F;&#x4F9D;&#x8D56;&#xFF0C;&#x76EE;&#x7684;&#x4E3A;&#x4E86;&#x62C6;&#x89E3;&#x5BA2;&#x6237;&#x7AEF;&#x4F9D;&#x8D56;&#xFF0C;&#x5C3D;&#x53EF;&#x80FD;&#x51CF;&#x5C11;&#x5BA2;&#x6237;&#x7AEF;&#x7684;&#x4F9D;&#x8D56;&#x3002; rocketmq-store &#x5B58;&#x50A8;&#x670D;&#x52A1;&#xFF0C;&#x6D88;&#x606F;&#x5B58;&#x50A8;&#xFF0C;&#x7D22;&#x5F15;&#x5B58;&#x50A8;&#xFF0C;commitLog&#x5B58;&#x50A8;&#x3002; rocketmq-tools &#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#x3002; 3. NameServer&#x5B58;&#x53D6; broker &#x7684;&#x8DEF;&#x7531;&#x4FE1;&#x606F; op who when how &#x5B58; broker &#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019; &#x5411;namesrv&#x6CE8;&#x518C;&#xFF0C;&#x5305;&#x62EC;master&#x548C;slave &#x53D6; &#x5BA2;&#x6237;&#x7AEF;&#xFF08;Producer&#x3001;Consumer&#xFF09; &#x64CD;&#x4F5C; topic &#x7684;&#x65F6;&#x5019; &#x6839;&#x636E;topic&#x83B7;&#x53D6;&#x6240;&#x6709;&#x5230;broker&#x7684;&#x8DEF;&#x7531;&#x4FE1;&#x606F; 3.1. Maven&#x4F9D;&#x8D56;&#x56FE;&#x4F7F;&#x7528; IDEA &#x53EF;&#x4EE5;&#x770B;&#x5230; compile &#x7EA7;&#x522B;&#x7684;&#x4F9D;&#x8D56;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; 4. Broker&#x5BA2;&#x6237;&#x7AEF;&#x8FDE;&#x63A5;&#x3001;&#x6D88;&#x606F;&#x5904;&#x7406; 4.1. Maven&#x4F9D;&#x8D56;&#x56FE;&#x4F7F;&#x7528; IDEA &#x53EF;&#x4EE5;&#x770B;&#x5230; compile &#x7EA7;&#x522B;&#x7684;&#x4F9D;&#x8D56;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; 5. FilterServer&#x6839;&#x636E; Consumer &#x4E0A;&#x4F20;&#x7684; Filter &#x6837;&#x672C;&#xFF0C;&#x5728; Server &#x7AEF;&#x8FDB;&#x884C;&#x6D88;&#x606F;&#x8FC7;&#x8651; 5.1. Maven&#x4F9D;&#x8D56;&#x56FE;&#x4F7F;&#x7528; IDEA &#x53EF;&#x4EE5;&#x770B;&#x5230; compile &#x7EA7;&#x522B;&#x7684;&#x4F9D;&#x8D56;&#x56FE;&#x5982;&#x4E0B;&#xFF1A; 6. &#x89E3;&#x8BFB;&#x6211;&#x4EEC;&#x4ECE;&#x4E0A;&#x9762;&#x4E09;&#x5F20;&#x4F9D;&#x8D56;&#x56FE;&#x4E0A;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6765;&#xFF0C;rocketmq-remoting &#x662F;&#x51E0;&#x4E2A;&#x5185;&#x90E8;&#x4F9D;&#x8D56;&#x7684;&#x6700;&#x5E95;&#x5C42;&#x3002; &#x56E0;&#x6B64;&#x4E0B;&#x4E00;&#x7AE0;&#x8282;&#xFF0C;&#x6211;&#x4EEC;&#x4ECE; rocketmq-remoting &#x5F00;&#x59CB;&#x3002;","tags":[{"name":"rocketmq","slug":"rocketmq","permalink":"http://hiant.github.io/tags/rocketmq/"}]},{"title":"RocketMQ系列0x0——编译及简单部署","date":"2016-08-11T05:16:40.000Z","path":"2016/08/11/rocketmq-0x0/","text":"1. &#x83B7;&#x53D6;&#x6E90;&#x7801;1.1. RocketMQ&#x7684;&#x4E3B;&#x9875;https://github.com/alibaba/RocketMQ &#x4E0A;&#x9762;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#xFF0C;&#x4E91;&#x4E0A;&#x7684;&#xFF0C;docker&#x4E0A;&#x7684;&#x7B49;&#x7B49;&#xFF0C;&#x6211;&#x4EEC;&#x4ECE;&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x5F00;&#x59CB;&#x3002; 1.2. &#x68C0;&#x51FA;&#x6E90;&#x7801; git-bash&#x547D;&#x4EE4;&#x884C;&#x65B9;&#x5F0F;&#xFF1A;git clone https://github.com/alibaba/RocketMQ.git &#x6D4F;&#x89C8;&#x5668;&#x6216;&#x8005;&#x4E0B;&#x8F7D;&#x5DE5;&#x5177;&#x4E0B;&#x8F7D;&#x5730;&#x5740;&#xFF1A;https://codeload.github.com/alibaba/RocketMQ/zip/master &#x5982;&#x679C;&#x9700;&#x8981;&#x7279;&#x6B8A;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;&#x5207;&#x6362;tag&#xFF0C;&#x7136;&#x540E;&#x68C0;&#x51FA; 2. &#x524D;&#x7F6E;&#x6761;&#x4EF6; jdk&#xFF1A;&#x6E90;&#x7801;&#x7684;pom&#x6587;&#x4EF6;&#x4E2D;&#x6307;&#x5B9A;&#x4E86;&#xFF1A;&lt;maven.compiler.source&gt;1.6&lt;/maven.compiler.source&gt;&#x548C;&lt;maven.compiler.target&gt;1.6&lt;/maven.compiler.target&gt;&#xFF0C;&#x56E0;&#x6B64;&#x6700;&#x4F4E;&#x7248;&#x672C;&#x9700;&#x8981;&#x5B89;&#x88C5;1.6&#x4EE5;&#x4E0A; maven&#xFF1A;&#x65E0;&#x7279;&#x6B8A;&#x8981;&#x6C42; nexus&#xFF1A;&#x9879;&#x76EE;&#x4E2D;&#x95F4;&#x63A5;&#x5F15;&#x7528;&#x5230;&#x4E86;&#x4E00;&#x4E2A; jenkins-1.26.pom&#xFF0C;&#x4E2D;&#x592E;&#x4ED3;&#x5E93;&#x662F;&#x627E;&#x4E0D;&#x5230;&#x7684;&#xFF0C;&#x5728;jenkins&#x7684;&#x79C1;&#x6709;&#x4ED3;&#x5E93;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x914D;&#x7F6E;nexus&#x6216;&#x8005;&#x6CA1;&#x6709;nexus&#x7684;&#x8BDD;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x6E90;&#x7801;pom&#x91CC;&#x9762;&#x6307;&#x660E;&#x4ED3;&#x5E93;&#x5730;&#x5740;&#x3002;&#x4ED3;&#x5E93;&#x5730;&#x5740;&#xFF1A;http://repo.jenkins-ci.org/releases/ 3. &#x7F16;&#x8BD1; &#x89E3;&#x538B;&#x6E90;&#x7801;&#x538B;&#x7F29;&#x5305; &#x8FDB;&#x5165;&#x6E90;&#x7801;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C; mvn -Dmaven.test.skip=true clean package install assembly:assembly -U &#x6CE8;&#x610F;&#xFF1A;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x914D;&#x7F6E;jenkins&#x79C1;&#x6709;&#x4ED3;&#x5E93;&#x5730;&#x5740;&#xFF0C;&#x7F16;&#x8BD1;&#x4F1A;&#x5361;&#x5728; rocketmq-tools &#x8FD9;&#x91CC; 4. &#x90E8;&#x7F72;&#x5C06;&#x7F16;&#x8BD1;&#x7ED3;&#x679C; alibaba-rocketmq-broker.tar.gz &#x89E3;&#x538B;&#xFF0C;&#x8FDB;&#x5165;bin&#x76EE;&#x5F55;&#xFF0C;&#x9605;&#x8BFB;&#x4E0B; README.md &#x6587;&#x6863;&#x3002; &#x91CC;&#x9762;&#x63D0;&#x5230;&#x4E86;&#x5728;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x53C2;&#x6570;&#x8C03;&#x4F18;&#xFF0C;&#x662F;&#x9700;&#x8981;root&#x6743;&#x9650;&#x7684;&#xFF0C;&#x4E14;&#x56E0;&#x4E3A;&#x662F;&#x76F4;&#x63A5;&#x5199;&#x5165;&#x7CFB;&#x7EDF;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x80FD;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x5C31;&#x4E0D;&#x7528;&#x6267;&#x884C;&#x4E86; 4.1. nameserver &#x67E5;&#x770B;&#x542F;&#x52A8;&#x811A;&#x672C;&#x7684;&#x8BF4;&#x660E;&#xFF1A;sh mqnamesrv -h &#x6216;&#x8005; sh mqnamesrv --help &#x67E5;&#x770B;nameserver&#x7684;&#x6240;&#x6709;&#x914D;&#x7F6E;&#x9879;&#xFF1A;sh mqnamesrv -p &#x6216;&#x8005; sh mqnamesrv --printConfigItem nameserver&#x7684;&#x914D;&#x7F6E;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x4E0D;&#x9700;&#x8981;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x6709;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x7684;&#x5C06;&#x4E0A;&#x56FE;&#x5185;&#x5BB9;&#x653E;&#x5230;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;-c &#x6307;&#x5B9A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x8DEF;&#x5F84; &#x542F;&#x52A8;&#xFF1A;sh mqnamesrv 4.2. broker &#x67E5;&#x770B;&#x542F;&#x52A8;&#x811A;&#x672C;&#x7684;&#x8BF4;&#x660E;&#xFF1A;sh mqbroker -h &#x6216;&#x8005; sh mqbroker --help &#x67E5;&#x770B;broker&#x7684;&#x6240;&#x6709;&#x914D;&#x7F6E;&#x9879;&#xFF1A;sh mqbroker -p &#x6216;&#x8005; sh mqbroker --printConfigItem &#x548C;nameserver&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;broker&#x7684;&#x914D;&#x7F6E;&#x9879;&#x592A;&#x591A;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x547D;&#x4EE4;sh mqbroker -m &#x6216;&#x8005; sh mqbroker --printImportantConfig&#x7528;&#x6765;&#x663E;&#x793A;&#x8F83;&#x91CD;&#x8981;&#x7684;&#x914D;&#x7F6E; broker&#x7684;&#x914D;&#x7F6E;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x4E0D;&#x9700;&#x8981;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x6709;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x7684;&#x5C06;&#x4E0A;&#x56FE;&#x5185;&#x5BB9;&#x6216;&#x8005; sh mqbroker -p &#x7684;&#x7ED3;&#x679C;&#x653E;&#x5230;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;-c &#x6307;&#x5B9A;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x8DEF;&#x5F84; &#x542F;&#x52A8;&#xFF1A;sh mqbroker -c ../conf/2m-noslave/broker-a.properties &#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#x662F;&#x4E0D;&#x5E26;namesrvAddr&#x7684;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5728;&#x547D;&#x4EE4;&#x548C;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x52A0;&#x4E0A;&#xFF0C;&#x90A3;&#x4E48;broker&#x80FD;&#x542F;&#x52A8;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x4F1A;&#x53BB;&#x6CE8;&#x518C; 5. mqadmin&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;&#x8FD0;&#x7EF4;&#x7684;&#x5B50;&#x547D;&#x4EE4;&#xFF0C;&#x76F4;&#x63A5;&#x8FD0;&#x884C;&#x53EF;&#x5217;&#x51FA;&#x6240;&#x6709;&#x7684;&#x5B50;&#x547D;&#x4EE4; 5.1. &#x67E5;&#x770B;nameserver&#x4E0A;&#x6CE8;&#x518C;&#x7684;broker&#x5217;&#x8868;&#x547D;&#x4EE4;&#xFF1A;sh mqadmin clusterList -n 10.25.212.44:9876 5.2. &#x67E5;&#x770B;broker&#x72B6;&#x6001;&#x547D;&#x4EE4;&#xFF1A;sh mqadmin brokerStatus -b 10.25.212.44:10911","tags":[{"name":"rocketmq","slug":"rocketmq","permalink":"http://hiant.github.io/tags/rocketmq/"}]},{"title":"起点","date":"2016-08-01T03:34:40.000Z","path":"2016/08/01/hello-world/","text":"今天自己动手完成安装hexo及github pages的创建，以后记录日志就方便啦","tags":[]}]